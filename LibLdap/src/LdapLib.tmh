// a7b02d7c74b8696ca7a16aef4335069a Generated file. Do not edit.
// File created by WPP compiler version 10.0.16299-Fri Sep 29 02:03:49 2017
// from template um-default.tpl

// template um-header.tpl

#ifdef  WPP_THIS_FILE
// included twice
#       define  WPP_ALREADY_INCLUDED
#       undef   WPP_THIS_FILE
#endif  // #ifdef WPP_THIS_FILE

#define WPP_THIS_FILE LdapLib_c

#ifndef WPP_ALREADY_INCLUDED

#ifndef USER_MODE_NATIVE_ETW
#ifdef BUILD_MINWIN
#include <windowscore.h>
#else
#include <windows.h>
#endif
#endif

#include <wmistr.h>
#include <evntrace.h>
#ifndef WPP_TRACE_W2K_COMPATABILITY
#include <sddl.h>
#endif

#if defined(__cplusplus)
extern "C" {
#endif

#ifdef USER_MODE_NATIVE_ETW
#define WPP_USE_NTDLL_FUNCTIONS

typedef 
ULONG 
(__stdcall *WMIDPREQUEST)(
    _In_ WMIDPREQUESTCODE RequestCode,
    _In_ PVOID RequestContext,
    _Inout_ ULONG *BufferSize,
    _Inout_ PVOID Buffer
    );

typedef struct  _TRACE_GUID_REGISTRATION {
    LPCGUID Guid;            // Guid of data block being registered or updated.
    HANDLE RegHandle;        // Guid Registration Handle is returned.
} TRACE_GUID_REGISTRATION, *PTRACE_GUID_REGISTRATION;

#endif

// LEGACY: This structure was used by Win2k RpcRt4 and cluster tracing

typedef struct _WPP_WIN2K_CONTROL_BLOCK {
    TRACEHANDLE Logger;
    ULONG Flags;
    ULONG Level;
    LPCGUID ControlGuid;
} WPP_WIN2K_CONTROL_BLOCK, *PWPP_WIN2K_CONTROL_BLOCK;

#pragma warning(push)
#pragma warning(disable:4201) // nonstandard extension used nameless struct/union

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
    struct _WPP_TRACE_CONTROL_BLOCK *Next;
    TRACEHANDLE     UmRegistrationHandle;
    union {
        TRACEHANDLE              Logger;
        PWPP_WIN2K_CONTROL_BLOCK Win2kCb;
        PVOID                    Ptr;
        struct _WPP_TRACE_CONTROL_BLOCK *Cb;
    };
    
    UCHAR           FlagsLen; 
    UCHAR           Level; 
    USHORT          Options;
    ULONG           Flags[1];
    LPCGUID         ControlGuid;
#if ENABLE_WPP_RECORDER    
    PVOID           AutoLogContext;
    USHORT          AutoLogVerboseEnabled;
    USHORT          AutoLogAttachToMiniDump;
#endif    
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK;
#pragma warning(pop)

#ifdef WPP_USE_NTDLL_FUNCTIONS

ULONG
__stdcall
EtwTraceMessage(
    _In_ TRACEHANDLE LoggerHandle,
    _In_ ULONG MessageFlags,
    _In_ LPCGUID MessageGuid,
    _In_ USHORT MessageNumber,
    ...
    );

TRACEHANDLE
__stdcall
EtwGetTraceLoggerHandle(
    _In_ PVOID Buffer
    );

UCHAR
__stdcall
EtwGetTraceEnableLevel(
    _In_ TRACEHANDLE LoggerHandle
    );

ULONG
__stdcall
EtwGetTraceEnableFlags(
    _In_ TRACEHANDLE LoggerHandle
    );

ULONG 
__stdcall
EtwRegisterTraceGuidsW(
    _In_ WMIDPREQUEST RequestAddress,
    _In_ PVOID RequestContext,
    _In_ LPCGUID ControlGuid,
    _In_ ULONG GuidCount,
    _In_ PTRACE_GUID_REGISTRATION GuidReg,
    _In_opt_ LPCWSTR MofImagePath,
    _In_opt_ LPCWSTR MofResourceName,
    _Out_ PTRACEHANDLE RegistrationHandle
    );

ULONG
__stdcall
EtwUnregisterTraceGuids(
    _In_ TRACEHANDLE RegistrationHandle
    );

#define WPP_TRACE                   EtwTraceMessage
#define WPP_GET_TRACE_LOGGER_HANDLE EtwGetTraceLoggerHandle
#define WPP_GET_TRACE_ENABLE_LEVEL  EtwGetTraceEnableLevel
#define WPP_GET_TRACE_ENABLE_FLAGS  EtwGetTraceEnableFlags
#define WPP_REGISTER_TRACE_GUIDS    EtwRegisterTraceGuidsW
#define WPP_UNREGISTER_TRACE_GUIDS  EtwUnregisterTraceGuids

#endif

#define WPP_IsValidSid IsValidSid
#define WPP_GetLengthSid GetLengthSid

#ifndef WPP_TRACE
#define WPP_TRACE TraceMessage
#endif

#ifndef WPP_UNREGISTER_TRACE_GUIDS
#define WPP_UNREGISTER_TRACE_GUIDS  UnregisterTraceGuids 
#endif


#ifndef WPP_REGISTER_TRACE_GUIDS 
#define WPP_REGISTER_TRACE_GUIDS  RegisterTraceGuids
#endif


#ifndef WPP_GET_TRACE_LOGGER_HANDLE
#define WPP_GET_TRACE_LOGGER_HANDLE  GetTraceLoggerHandle
#endif

#ifndef WPP_GET_TRACE_ENABLE_LEVEL 
#define WPP_GET_TRACE_ENABLE_LEVEL  GetTraceEnableLevel
#endif

#ifndef WPP_GET_TRACE_ENABLE_FLAGS 
#define WPP_GET_TRACE_ENABLE_FLAGS  GetTraceEnableFlags
#endif

enum {
    WPP_VER_WIN2K_CB_FORWARD_PTR    = 0x01,
    WPP_VER_WHISTLER_CB_FORWARD_PTR = 0x02,
    WPP_VER_LH_CB_FORWARD_PTR = 0x03
};

#if ENABLE_WPP_RECORDER

#ifndef WPP_RECORDER
#define WPP_RECORDER WppAutoLogTrace
#endif

#if !defined(WPP_RECORDER_LEVEL_FLAGS_ARGS)
#define WPP_RECORDER_LEVEL_FLAGS_ARGS(lvl, flags) WPP_CONTROL(WPP_BIT_ ## flags).AutoLogContext, lvl, WPP_BIT_ ## flags
#define WPP_RECORDER_LEVEL_FLAGS_FILTER(lvl,flags) (lvl < TRACE_LEVEL_VERBOSE || WPP_CONTROL(WPP_BIT_ ## flags).AutoLogVerboseEnabled)
#endif

#if !defined(WPP_RECORDER_FLAGS_LEVEL_ARGS)
#define WPP_RECORDER_FLAGS_LEVEL_ARGS(flags, lvl) WPP_RECORDER_LEVEL_FLAGS_ARGS(lvl, flags)
#define WPP_RECORDER_FLAGS_LEVEL_FILTER(flags, lvl) WPP_RECORDER_LEVEL_FLAGS_FILTER(lvl, flags)
#endif

#if !defined(WPP_RECORDER_LEVEL_ARGS)
#define WPP_RECORDER_LEVEL_ARGS(lvl) WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogContext, 0, WPP_BIT_ ## lvl
#define WPP_RECORDER_LEVEL_FILTER(lvl) (WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogVerboseEnabled)
#endif

NTSTATUS
WppAutoLogTrace(
    _In_ PVOID              AutoLogContext,
    _In_ UCHAR              MessageLevel,
    _In_ ULONG              MessageFlags,
    _In_ LPGUID             MessageGuid,
    _In_ USHORT             MessageNumber,
    _In_ ...
    );

#endif // ENABLE_WPP_RECORDER

//  
// WPP_INIT_TRACING and WPP_CLEANUP macros are defined differently for kernel 
// mode and user mode. In order to support mode-agnostic WDF drivers, 
// WPP_INIT_TRACING and WPP_CLEANUP macros for UMDF 2.x user-mode drivers are
// being updated to be same as kernel mode macros. This difference is based
// upon the macro WPP_MACRO_USE_KM_VERSION_FOR_UM.    
//

#ifdef WPP_MACRO_USE_KM_VERSION_FOR_UM

VOID WppCleanupUm( VOID );
#define WPP_CLEANUP(DrvObj) WppCleanupUm()
#else
VOID WppCleanupUm( VOID );
#define WPP_CLEANUP() WppCleanupUm()
#endif

#define WppLoadTracingSupport 

//
// For getting private callback, implement a function with the signature below.
// To register the function: #define WPP_PRIVATE_ENABLE_CALLBACK MyPrivateCallback
// If multiple control guids are used, be sure to compare Guid to the one of interest.
//

#if defined(WPP_PRIVATE_ENABLE_CALLBACK)

typedef
VOID
(NTAPI *PFN_WPP_PRIVATE_ENABLE_CALLBACK)(
    _In_ LPCGUID Guid,   
    _In_ TRACEHANDLE Logger, 
    _In_ BOOLEAN Enable, 
    _In_ ULONG Flags,    
    _In_ UCHAR Level
    );  

#endif

//
// For generating CAPTURE_STATE callback (Win7+), implement a function with the signature
// below. To register the function: #define WPP_CAPTURE_STATE_CALLBACK MyCaptureStateCallback
// If multiple control guids are used, be sure to compare Guid to the one of interest.
//

#if defined(WPP_CAPTURE_STATE_CALLBACK)

typedef
VOID
(NTAPI *PFN_WPP_CAPTURE_STATE_CALLBACK)(
    _In_ LPCGUID Guid,   
    _In_ TRACEHANDLE Logger, 
    _In_ ULONG Flags,    
    _In_ UCHAR Level
    );

#endif

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


 
// template control.tpl

//
//     Defines a set of macro that expand control model specified
//     with WPP_CONTROL_GUIDS (example shown below)
//     into an enum of trace levels and required structures that
//     contain the mask of levels, logger handle and some information
//     required for registration.
//

#ifndef WPP_ALREADY_INCLUDED

#define WPP_EVAL(x) x
#define WPP_STR(x)  #x
#define WPP_STRINGIZE(x) WPP_STR(x)
#define WPP_GLUE(a, b)  a ## b
#define WPP_GLUE3(a, b, c)  a ## b ## c
#define WPP_GLUE4(a, b, c, d)  a ## b ## c ## d
#define WPP_XGLUE(a, b) WPP_GLUE(a, b)
#define WPP_XGLUE3(a, b, c) WPP_GLUE3(a, b, c)
#define WPP_XGLUE4(a, b, c, d) WPP_GLUE4(a, b, c, d)

///////////////////////////////////////////////////////////////////////////////////
//
// #define WPP_CONTROL_GUIDS \
//     WPP_DEFINE_CONTROL_GUID(Regular,(81b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Error)      \
//       WPP_DEFINE_BIT(Unusual)    \
//       WPP_DEFINE_BIT(Noise)      \
//    )        \
//    WPP_DEFINE_CONTROL_GUID(HiFreq,(91b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Entry)      \
//       WPP_DEFINE_BIT(Exit)       \
//       WPP_DEFINE_BIT(ApiCalls)   \
//       WPP_DEFINE_BIT(RandomJunk) \
//       WPP_DEFINE_BIT(LovePoem)   \
//    )        

#if defined(__cplusplus)
extern "C" {
#endif

#if !defined(WPP_CONTROL_GUIDS)  && defined(WPP_ETW_PROVIDER)
#define WPP_NO_CONTROL_GUIDS
#endif

#if !defined(WPP_NO_CONTROL_GUIDS)

#if defined(WPP_DEFAULT_CONTROL_GUID)
#  if defined(WPP_CONTROL_GUIDS)
#     pragma message(__FILE__ " : error : WPP_DEFAULT_CONTROL_GUID cannot be used together with WPP_CONTROL_GUIDS")
#     stop
#  else
#     define WPP_CONTROL_GUIDS \
         WPP_DEFINE_CONTROL_GUID(Default,(WPP_DEFAULT_CONTROL_GUID), \
         WPP_DEFINE_BIT(Error)   \
         WPP_DEFINE_BIT(Unusual) \
         WPP_DEFINE_BIT(Noise)   \
      )
#  endif      
#endif

#if !defined(WPP_CONTROL_GUIDS)
#  pragma message(__FILE__ " : error : Please define control model via WPP_CONTROL_GUIDS or WPP_DEFAULT_CONTROL_GUID macros")
#  pragma message(__FILE__ " : error : don't forget to call WPP_INIT_TRACING and WPP_CLEANUP in your main, DriverEntry or DllInit")
#  pragma message(__FILE__ " : error : see tracewpp.doc for further information")
stop.
#endif
// a set of macro to convert a guid in a form x(81b20fea,73a8,4b62,95bc,354477c97a6f)
// into either a a struct or text string

#define _WPPW(x) WPP_GLUE(L, x)

#define WPP_GUID_NORM(l,w1,w2,w3,ll) l ## w1 ## w2 ## w3 ## ll
#define WPP_GUID_TEXT(l,w1,w2,w3,ll) #l "-" #w1 "-" #w2 "-" #w3 "-" #ll
#define WPP_GUID_WTEXT(l,w1,w2,w3,ll) _WPPW(#l) L"-" _WPPW(#w1) L"-" _WPPW(#w2) L"-" _WPPW(#w3) L"-" _WPPW(#ll)
#define WPP_EXTRACT_BYTE(val,n) (((ULONGLONG)(0x ## val) >> (8 * n)) & 0xFF)
#define WPP_GUID_STRUCT(l,w1,w2,w3,ll) {0x ## l, 0x ## w1, 0x ## w2,\
     {WPP_EXTRACT_BYTE(w3, 1), WPP_EXTRACT_BYTE(w3, 0),\
      WPP_EXTRACT_BYTE(ll, 5), WPP_EXTRACT_BYTE(ll, 4),\
      WPP_EXTRACT_BYTE(ll, 3), WPP_EXTRACT_BYTE(ll, 2),\
      WPP_EXTRACT_BYTE(ll, 1), WPP_EXTRACT_BYTE(ll, 0)} }

#ifndef WPP_FORCEINLINE
#if !defined(WPP_OLDCC)
#define WPP_FORCEINLINE __forceinline
#else
#define WPP_FORCEINLINE __inline
#endif
#endif


// define an enum of control block names
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)),
enum WPP_CTL_NAMES { WPP_CONTROL_GUIDS WPP_LAST_CTL};
#undef WPP_DEFINE_CONTROL_GUID

// define control guids
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
extern __declspec(selectany) const GUID WPP_XGLUE4(WPP_, ThisDir, _CTLGUID_, WPP_EVAL(Name)) = WPP_GUID_STRUCT Guid;
WPP_CONTROL_GUIDS
#undef WPP_DEFINE_CONTROL_GUID

// define enums of individual bits
/////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
    WPP_XGLUE(WPP_BLOCK_START_, WPP_EVAL(Name)) = WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)) * 0x10000, Bits WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name)), 
# define WPP_DEFINE_BIT(Name) WPP_BIT_ ## Name,
enum WPP_DEFINE_BIT_NAMES { WPP_CONTROL_GUIDS };
# undef WPP_DEFINE_BIT
#undef WPP_DEFINE_CONTROL_GUID

#define WPP_MASK(CTL)    (1 << ( ((CTL)-1) & 31 ))
#define WPP_FLAG_NO(CTL) ( (0xFFFF & ((CTL)-1) ) / 32)
#define WPP_CTRL_NO(CTL) ((CTL) >> 16)

// calculate how many DWORDs we need to get the required number of bits
// upper estimate. Sometimes will be off by one
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) | WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name))
enum _WPP_FLAG_LEN_ENUM { WPP_FLAG_LEN = 1 | ((0 WPP_CONTROL_GUIDS) & 0xFFFF) / 32 };
#undef WPP_DEFINE_CONTROL_GUID

//
// Check that maximum number of flags does not exceed 32
//
#ifndef C_ASSERT
#define C_ASSERT(e) typedef char __C_ASSERT__[(e)?1:-1]
#endif

#define MAX_NUMBER_OF_ETW_FLAGS 34 // 32 flags plus 2 separators
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) && ((WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name) & 0xFFFF)) < MAX_NUMBER_OF_ETW_FLAGS)
enum _WPP_FLAG_LEN_ENUM_MAX { WPP_MAX_FLAG_LEN_CHECK = (1 WPP_CONTROL_GUIDS) }; 
#undef WPP_DEFINE_CONTROL_GUID

#ifndef WPP_CB
#  define WPP_CB      WPP_GLOBAL_Control
#endif
#ifndef WPP_CB_TYPE
#define WPP_CB_TYPE WPP_PROJECT_CONTROL_BLOCK
#endif

typedef union {
    WPP_TRACE_CONTROL_BLOCK Control;      
    UCHAR ReserveSpace[ sizeof(WPP_TRACE_CONTROL_BLOCK) + sizeof(ULONG) * (WPP_FLAG_LEN - 1) ];
} WPP_CB_TYPE ;

 
extern __declspec(selectany) WPP_CB_TYPE *WPP_CB = (WPP_CB_TYPE*)&WPP_CB;

#define WPP_CONTROL(CTL) (WPP_CB[WPP_CTRL_NO(CTL)].Control)

#ifndef WPP_USE_TRACE_LEVELS
// For historical reasons the use of LEVEL could imply flags, this was a bad choice but very difficult
// to undo.
#if !defined(WPP_LEVEL_LOGGER)
#  define WPP_LEVEL_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif

#if !defined(WPP_LEVEL_ENABLED)
#  define WPP_LEVEL_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif
#else  //  #ifndef WPP_USE_TRACE_LEVELS
#if !defined(WPP_LEVEL_LOGGER)
#define WPP_LEVEL_LOGGER(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Logger),
#endif

#if !defined(WPP_LEVEL_ENABLED)
#define WPP_LEVEL_ENABLED(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Level >= lvl)
#endif
#endif  // #ifndef WPP_USE_TRACE_LEVELS

#if !defined(WPP_FLAG_LOGGER)
#  define WPP_FLAG_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif


#if !defined(WPP_FLAG_ENABLED)
#  define WPP_FLAG_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif


#ifndef WPP_ENABLED
#  define WPP_ENABLED() 1
#endif
#ifndef WPP_LOGGER
#  define WPP_LOGGER() (WPP_CB[0].Control.Logger),
#endif

#endif // WPP_NO_CONTROL_GUIDS

#if !defined(WPP_GET_LOGGER)
#  define WPP_GET_LOGGER Logger
#endif

#if !defined(WPP_LOGGER_ARG)
#  define WPP_LOGGER_ARG TRACEHANDLE Logger,
#endif

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED



#if ENABLE_WPP_RECORDER
// template tracemacro-ifr.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c109
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c112
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c118
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c123
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c126
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c129
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c142
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c154
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c177
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c181
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c198
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c206
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c214
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c218
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c233
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c248
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c251
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c273
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c276
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c284
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c287
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c321
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c324
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c339
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c348
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c356
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c37
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c381
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c394
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c397
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c407
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c411
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c421
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c425
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c436
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c439
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c449
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c452
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c456
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c459
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c476
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c481
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c500
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c505
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c509
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c551
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c563
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c60
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c607
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c617
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c621
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c662
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c686
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c691
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c698
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c710
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c714
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c791
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c810
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c819
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c823
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c831
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c837
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c853
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c863
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c867
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c890
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c901
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c912
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c92
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c924
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c935
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c950
#endif
#ifdef WPP_EMIT_FUNC_NAME
#define WPP_FUNC_NAME L" FUNC=" _WPPW(__FUNCTION__)
#else
#define WPP_FUNC_NAME
#endif

#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c109_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0Unable to extract monovaluated attributes <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c109_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0Unable to extract monovaluated attributes <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c109
    #define WPP_ANNOTATE_LdapLib_c109 WPP_ANNOTATE_LdapLib_c109_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c109 WPP_ANNOTATE_LdapLib_c109_FINAL("TMF:", "LdapLib.c", "LdapLib_c109", L"{", L"ptCurrAttrNameWithRange, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c112_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0Successfully extracted monovaluated attribute <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c112_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0Successfully extracted monovaluated attribute <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c112
    #define WPP_ANNOTATE_LdapLib_c112 WPP_ANNOTATE_LdapLib_c112_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c112 WPP_ANNOTATE_LdapLib_c112_FINAL("TMF:", "LdapLib.c", "LdapLib_c112", L"{", L"ptCurrAttrNameWithRange, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c118_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0No such object (non-fatal) <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c118_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0No such object (non-fatal) <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c118
    #define WPP_ANNOTATE_LdapLib_c118 WPP_ANNOTATE_LdapLib_c118_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c118 WPP_ANNOTATE_LdapLib_c118_FINAL("TMF:", "LdapLib.c", "LdapLib_c118", L"{", L"ptCurrAttrNameWithRange, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c123_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0Unable to extract multivaluated attributes <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c123_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0Unable to extract multivaluated attributes <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c123
    #define WPP_ANNOTATE_LdapLib_c123 WPP_ANNOTATE_LdapLib_c123_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c123 WPP_ANNOTATE_LdapLib_c123_FINAL("TMF:", "LdapLib.c", "LdapLib_c123", L"{", L"ptCurrAttrNameWithRange, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c126_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0Successfully extracted multivaluated attribute <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c126_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0Successfully extracted multivaluated attribute <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c126
    #define WPP_ANNOTATE_LdapLib_c126 WPP_ANNOTATE_LdapLib_c126_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c126 WPP_ANNOTATE_LdapLib_c126_FINAL("TMF:", "LdapLib.c", "LdapLib_c126", L"{", L"ptCurrAttrNameWithRange, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c129_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0Successfully stored extracted attribute <%10!s!> into result set for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c129_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0Successfully stored extracted attribute <%10!s!> into result set for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c129
    #define WPP_ANNOTATE_LdapLib_c129 WPP_ANNOTATE_LdapLib_c129_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c129 WPP_ANNOTATE_LdapLib_c129_FINAL("TMF:", "LdapLib.c", "LdapLib_c129", L"{", L"ptCurrAttrNameWithRange, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c142_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0Successfully extracted data from LDAP message <%10!p!> to LDAP entry <%11!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c142_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0Successfully extracted data from LDAP message <%10!p!> to LDAP entry <%11!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c142
    #define WPP_ANNOTATE_LdapLib_c142 WPP_ANNOTATE_LdapLib_c142_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c142 WPP_ANNOTATE_LdapLib_c142_FINAL("TMF:", "LdapLib.c", "LdapLib_c142", L"{", L"pLdapMessage, ItemPtr -- 10" , L"(*ppEntry), ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c154_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0Starting build of request object from attributes list\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c154_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0Starting build of request object from attributes list\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c154
    #define WPP_ANNOTATE_LdapLib_c154 WPP_ANNOTATE_LdapLib_c154_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c154 WPP_ANNOTATE_LdapLib_c154_FINAL("TMF:", "LdapLib.c", "LdapLib_c154", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c177_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0No attributes specified, requesting all attributes\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c177_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0No attributes specified, requesting all attributes\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c177
    #define WPP_ANNOTATE_LdapLib_c177 WPP_ANNOTATE_LdapLib_c177_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c177 WPP_ANNOTATE_LdapLib_c177_FINAL("TMF:", "LdapLib.c", "LdapLib_c177", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c181_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0Successfully built request object from attributes list\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c181_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0Successfully built request object from attributes list\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c181
    #define WPP_ANNOTATE_LdapLib_c181 WPP_ANNOTATE_LdapLib_c181_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c181 WPP_ANNOTATE_LdapLib_c181_FINAL("TMF:", "LdapLib.c", "LdapLib_c181", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c198_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0Starting non-paged request <%10!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c198_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0Starting non-paged request <%10!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c198
    #define WPP_ANNOTATE_LdapLib_c198 WPP_ANNOTATE_LdapLib_c198_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c198 WPP_ANNOTATE_LdapLib_c198_FINAL("TMF:", "LdapLib.c", "LdapLib_c198", L"{", L"ptFilter, ItemWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c206_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0Failed to build request object with attributes list: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c206_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0Failed to build request object with attributes list: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c206
    #define WPP_ANNOTATE_LdapLib_c206 WPP_ANNOTATE_LdapLib_c206_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c206 WPP_ANNOTATE_LdapLib_c206_FINAL("TMF:", "LdapLib.c", "LdapLib_c206", L"{", L"LdapLastError(), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c214_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0Failed to execute non-paged LDAP request <%10!s!>: <err:%11!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c214_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0Failed to execute non-paged LDAP request <%10!s!>: <err:%11!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c214
    #define WPP_ANNOTATE_LdapLib_c214 WPP_ANNOTATE_LdapLib_c214_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c214 WPP_ANNOTATE_LdapLib_c214_FINAL("TMF:", "LdapLib.c", "LdapLib_c214", L"{", L"ptFilter, ItemWString -- 10" , L"dwResult, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c218_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0Successfully sent non-paged request <%10!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c218_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0Successfully sent non-paged request <%10!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c218
    #define WPP_ANNOTATE_LdapLib_c218 WPP_ANNOTATE_LdapLib_c218_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c218 WPP_ANNOTATE_LdapLib_c218_FINAL("TMF:", "LdapLib.c", "LdapLib_c218", L"{", L"ptFilter, ItemWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c233_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0Starting RootDSE attributes extraction\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c233_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0Starting RootDSE attributes extraction\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c233
    #define WPP_ANNOTATE_LdapLib_c233 WPP_ANNOTATE_LdapLib_c233_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c233 WPP_ANNOTATE_LdapLib_c233_FINAL("TMF:", "LdapLib.c", "LdapLib_c233", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c248_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0Failed to bind anonymously to LDAP server: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c248_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0Failed to bind anonymously to LDAP server: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c248
    #define WPP_ANNOTATE_LdapLib_c248 WPP_ANNOTATE_LdapLib_c248_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c248 WPP_ANNOTATE_LdapLib_c248_FINAL("TMF:", "LdapLib.c", "LdapLib_c248", L"{", L"dwResult, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c251_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0Successfully binded to LDAP server anonymously\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c251_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0Successfully binded to LDAP server anonymously\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c251
    #define WPP_ANNOTATE_LdapLib_c251 WPP_ANNOTATE_LdapLib_c251_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c251 WPP_ANNOTATE_LdapLib_c251_FINAL("TMF:", "LdapLib.c", "LdapLib_c251", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c273_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0Failed to request RootDSE attributes: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c273_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0Failed to request RootDSE attributes: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c273
    #define WPP_ANNOTATE_LdapLib_c273 WPP_ANNOTATE_LdapLib_c273_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c273 WPP_ANNOTATE_LdapLib_c273_FINAL("TMF:", "LdapLib.c", "LdapLib_c273", L"{", L"dwResult, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c276_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0Successfully initialized RootDSE request\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c276_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0Successfully initialized RootDSE request\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c276
    #define WPP_ANNOTATE_LdapLib_c276 WPP_ANNOTATE_LdapLib_c276_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c276 WPP_ANNOTATE_LdapLib_c276_FINAL("TMF:", "LdapLib.c", "LdapLib_c276", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c284_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0Error while getting LDAP entry for RootDSE request: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c284_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0Error while getting LDAP entry for RootDSE request: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c284
    #define WPP_ANNOTATE_LdapLib_c284 WPP_ANNOTATE_LdapLib_c284_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c284 WPP_ANNOTATE_LdapLib_c284_FINAL("TMF:", "LdapLib.c", "LdapLib_c284", L"{", L"LdapLastError(), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c287_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0Successfully got LDAP entry for RootDSE request\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c287_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0Successfully got LDAP entry for RootDSE request\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c287
    #define WPP_ANNOTATE_LdapLib_c287 WPP_ANNOTATE_LdapLib_c287_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c287 WPP_ANNOTATE_LdapLib_c287_FINAL("TMF:", "LdapLib.c", "LdapLib_c287", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c321_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0Failed to retreive all RootDSE attributes, some of them may be missing.\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c321_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0Failed to retreive all RootDSE attributes, some of them may be missing.\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c321
    #define WPP_ANNOTATE_LdapLib_c321 WPP_ANNOTATE_LdapLib_c321_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c321 WPP_ANNOTATE_LdapLib_c321_FINAL("TMF:", "LdapLib.c", "LdapLib_c321", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c324_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0Successfully retreived all RootDSE attributes\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c324_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0Successfully retreived all RootDSE attributes\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c324
    #define WPP_ANNOTATE_LdapLib_c324 WPP_ANNOTATE_LdapLib_c324_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c324 WPP_ANNOTATE_LdapLib_c324_FINAL("TMF:", "LdapLib.c", "LdapLib_c324", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c339_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0Successfully ended RootDSE attributes extraction\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c339_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0Successfully ended RootDSE attributes extraction\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c339
    #define WPP_ANNOTATE_LdapLib_c339 WPP_ANNOTATE_LdapLib_c339_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c339 WPP_ANNOTATE_LdapLib_c339_FINAL("TMF:", "LdapLib.c", "LdapLib_c339", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c348_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0LibLdap WPP initialized\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c348_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0LibLdap WPP initialized\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c348
    #define WPP_ANNOTATE_LdapLib_c348 WPP_ANNOTATE_LdapLib_c348_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c348 WPP_ANNOTATE_LdapLib_c348_FINAL("TMF:", "LdapLib.c", "LdapLib_c348", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c356_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0Cleanup LibLdap WPP\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c356_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0Cleanup LibLdap WPP\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c356
    #define WPP_ANNOTATE_LdapLib_c356 WPP_ANNOTATE_LdapLib_c356_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c356 WPP_ANNOTATE_LdapLib_c356_FINAL("TMF:", "LdapLib.c", "LdapLib_c356", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c37_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0Starting data extraction from LDAP message <%10!p!> to LDAP entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c37_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0Starting data extraction from LDAP message <%10!p!> to LDAP entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c37
    #define WPP_ANNOTATE_LdapLib_c37 WPP_ANNOTATE_LdapLib_c37_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c37 WPP_ANNOTATE_LdapLib_c37_FINAL("TMF:", "LdapLib.c", "LdapLib_c37", L"{", L"pLdapMessage, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c381_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0Starting LDAP connection to host <%10!s!> on port <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c381_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0Starting LDAP connection to host <%10!s!> on port <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c381
    #define WPP_ANNOTATE_LdapLib_c381 WPP_ANNOTATE_LdapLib_c381_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c381 WPP_ANNOTATE_LdapLib_c381_FINAL("TMF:", "LdapLib.c", "LdapLib_c381", L"{", L"ptHost, ItemWString -- 10" , L"dwPort, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c394_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0Failed to create heap: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ALLOCATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c394_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0Failed to create heap: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ALLOCATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c394
    #define WPP_ANNOTATE_LdapLib_c394 WPP_ANNOTATE_LdapLib_c394_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c394 WPP_ANNOTATE_LdapLib_c394_FINAL("TMF:", "LdapLib.c", "LdapLib_c394", L"{", L"UtilsGetLastError(), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c397_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0Successfully created heap: <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ALLOCATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c397_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0Successfully created heap: <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ALLOCATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c397
    #define WPP_ANNOTATE_LdapLib_c397 WPP_ANNOTATE_LdapLib_c397_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c397 WPP_ANNOTATE_LdapLib_c397_FINAL("TMF:", "LdapLib.c", "LdapLib_c397", L"{", L"pHeap, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c407_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0Failed to init connection to LDAP server: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c407_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0Failed to init connection to LDAP server: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c407
    #define WPP_ANNOTATE_LdapLib_c407 WPP_ANNOTATE_LdapLib_c407_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c407 WPP_ANNOTATE_LdapLib_c407_FINAL("TMF:", "LdapLib.c", "LdapLib_c407", L"{", L"dwResult, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c411_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0Successfully initialized connection to LDAP server\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c411_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0Successfully initialized connection to LDAP server\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c411
    #define WPP_ANNOTATE_LdapLib_c411 WPP_ANNOTATE_LdapLib_c411_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c411 WPP_ANNOTATE_LdapLib_c411_FINAL("TMF:", "LdapLib.c", "LdapLib_c411", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c421_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0Failed to set LDAP options\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONFIGURATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c421_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0Failed to set LDAP options\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONFIGURATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c421
    #define WPP_ANNOTATE_LdapLib_c421 WPP_ANNOTATE_LdapLib_c421_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c421 WPP_ANNOTATE_LdapLib_c421_FINAL("TMF:", "LdapLib.c", "LdapLib_c421", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c425_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0Successfully set all LDAP options\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONFIGURATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c425_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0Successfully set all LDAP options\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONFIGURATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c425
    #define WPP_ANNOTATE_LdapLib_c425 WPP_ANNOTATE_LdapLib_c425_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c425 WPP_ANNOTATE_LdapLib_c425_FINAL("TMF:", "LdapLib.c", "LdapLib_c425", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c436_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0Failed to connect to LDAP server: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c436_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0Failed to connect to LDAP server: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c436
    #define WPP_ANNOTATE_LdapLib_c436 WPP_ANNOTATE_LdapLib_c436_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c436 WPP_ANNOTATE_LdapLib_c436_FINAL("TMF:", "LdapLib.c", "LdapLib_c436", L"{", L"dwResult, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c439_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0Successfully connected to LDAP server\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c439_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0Successfully connected to LDAP server\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c439
    #define WPP_ANNOTATE_LdapLib_c439 WPP_ANNOTATE_LdapLib_c439_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c439 WPP_ANNOTATE_LdapLib_c439_FINAL("TMF:", "LdapLib.c", "LdapLib_c439", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c449_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0Failed to extract RootDSE attributes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c449_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0Failed to extract RootDSE attributes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c449
    #define WPP_ANNOTATE_LdapLib_c449 WPP_ANNOTATE_LdapLib_c449_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c449 WPP_ANNOTATE_LdapLib_c449_FINAL("TMF:", "LdapLib.c", "LdapLib_c449", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c452_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0Successfully extracted RootDSE attributes\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c452_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0Successfully extracted RootDSE attributes\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c452
    #define WPP_ANNOTATE_LdapLib_c452 WPP_ANNOTATE_LdapLib_c452_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c452 WPP_ANNOTATE_LdapLib_c452_FINAL("TMF:", "LdapLib.c", "LdapLib_c452", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c456_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0Skipping RootDSE extraction\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c456_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0Skipping RootDSE extraction\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c456
    #define WPP_ANNOTATE_LdapLib_c456 WPP_ANNOTATE_LdapLib_c456_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c456 WPP_ANNOTATE_LdapLib_c456_FINAL("TMF:", "LdapLib.c", "LdapLib_c456", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c459_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0Successfully established LDAP connection to host <%10!s!> on port <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c459_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0Successfully established LDAP connection to host <%10!s!> on port <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c459
    #define WPP_ANNOTATE_LdapLib_c459 WPP_ANNOTATE_LdapLib_c459_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c459 WPP_ANNOTATE_LdapLib_c459_FINAL("TMF:", "LdapLib.c", "LdapLib_c459", L"{", L"ptHost, ItemWString -- 10" , L"dwPort, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c476_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0cannot allocate <%10!u!> bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c476_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0cannot allocate <%10!u!> bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c476
    #define WPP_ANNOTATE_LdapLib_c476 WPP_ANNOTATE_LdapLib_c476_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c476 WPP_ANNOTATE_LdapLib_c476_FINAL("TMF:", "LdapLib.c", "LdapLib_c476", L"{", L"(DWORD)(strlen(ptHost) + 1) * sizeof(LPWSTR), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c481_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0Failed to convert ANSI string: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c481_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0Failed to convert ANSI string: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c481
    #define WPP_ANNOTATE_LdapLib_c481 WPP_ANNOTATE_LdapLib_c481_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c481 WPP_ANNOTATE_LdapLib_c481_FINAL("TMF:", "LdapLib.c", "LdapLib_c481", L"{", L"GetLastError(), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c500_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0Starting binding to DN <%10!s!> using authentication method <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c500_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0Starting binding to DN <%10!s!> using authentication method <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c500
    #define WPP_ANNOTATE_LdapLib_c500 WPP_ANNOTATE_LdapLib_c500_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c500 WPP_ANNOTATE_LdapLib_c500_FINAL("TMF:", "LdapLib.c", "LdapLib_c500", L"{", L"ptBindingDn, ItemWString -- 10" , L"eAuthMethod, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c505_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0Failed to bind to DN <%10!s!> using authentication method <%11!u!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c505_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0Failed to bind to DN <%10!s!> using authentication method <%11!u!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c505
    #define WPP_ANNOTATE_LdapLib_c505 WPP_ANNOTATE_LdapLib_c505_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c505 WPP_ANNOTATE_LdapLib_c505_FINAL("TMF:", "LdapLib.c", "LdapLib_c505", L"{", L"ptBindingDn, ItemWString -- 10" , L"eAuthMethod, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c509_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0Successfully binded to DN <%10!s!> using authentication method <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c509_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0Successfully binded to DN <%10!s!> using authentication method <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c509
    #define WPP_ANNOTATE_LdapLib_c509 WPP_ANNOTATE_LdapLib_c509_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c509 WPP_ANNOTATE_LdapLib_c509_FINAL("TMF:", "LdapLib.c", "LdapLib_c509", L"{", L"ptBindingDn, ItemWString -- 10" , L"eAuthMethod, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c551_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0Binding using explicit authentication with username <%10!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c551_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0Binding using explicit authentication with username <%10!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c551
    #define WPP_ANNOTATE_LdapLib_c551 WPP_ANNOTATE_LdapLib_c551_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c551 WPP_ANNOTATE_LdapLib_c551_FINAL("TMF:", "LdapLib.c", "LdapLib_c551", L"{", L"ptUsername, ItemWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c563_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0Binding using implicit authentication\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c563_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0Binding using implicit authentication\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c563
    #define WPP_ANNOTATE_LdapLib_c563 WPP_ANNOTATE_LdapLib_c563_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c563 WPP_ANNOTATE_LdapLib_c563_FINAL("TMF:", "LdapLib.c", "LdapLib_c563", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c60_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0Processing entry <%10!s!> for LDAP request <%11!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c60_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0Processing entry <%10!s!> for LDAP request <%11!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c60
    #define WPP_ANNOTATE_LdapLib_c60 WPP_ANNOTATE_LdapLib_c60_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c60 WPP_ANNOTATE_LdapLib_c60_FINAL("TMF:", "LdapLib.c", "LdapLib_c60", L"{", L"(*ppEntry)->ptDn, ItemWString -- 10" , L"pRequest->pLDAPSearch, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c607_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0Starting closing LDAP connection\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c607_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0Starting closing LDAP connection\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c607
    #define WPP_ANNOTATE_LdapLib_c607 WPP_ANNOTATE_LdapLib_c607_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c607 WPP_ANNOTATE_LdapLib_c607_FINAL("TMF:", "LdapLib.c", "LdapLib_c607", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c617_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0Failed to unbind from LDAP server: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c617_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0Failed to unbind from LDAP server: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c617
    #define WPP_ANNOTATE_LdapLib_c617 WPP_ANNOTATE_LdapLib_c617_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c617 WPP_ANNOTATE_LdapLib_c617_FINAL("TMF:", "LdapLib.c", "LdapLib_c617", L"{", L"dwResult, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c621_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0Successfully unbinded from LDAP server\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c621_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0Successfully unbinded from LDAP server\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c621
    #define WPP_ANNOTATE_LdapLib_c621 WPP_ANNOTATE_LdapLib_c621_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c621 WPP_ANNOTATE_LdapLib_c621_FINAL("TMF:", "LdapLib.c", "LdapLib_c621", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c662_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0Successfully closed LDAP connection\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c662_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0Successfully closed LDAP connection\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c662
    #define WPP_ANNOTATE_LdapLib_c662 WPP_ANNOTATE_LdapLib_c662_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c662 WPP_ANNOTATE_LdapLib_c662_FINAL("TMF:", "LdapLib.c", "LdapLib_c662", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c686_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0Starting LDAP request to server <%10!s!> with filter <%11!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c686_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0Starting LDAP request to server <%10!s!> with filter <%11!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c686
    #define WPP_ANNOTATE_LdapLib_c686 WPP_ANNOTATE_LdapLib_c686_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c686 WPP_ANNOTATE_LdapLib_c686_FINAL("TMF:", "LdapLib.c", "LdapLib_c686", L"{", L"pConnection->ptHost, ItemWString -- 10" , L"ptFilter, ItemWString -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c691_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0Invalid LDAP filter <%10!s!>: <err:%11!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c691_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0Invalid LDAP filter <%10!s!>: <err:%11!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c691
    #define WPP_ANNOTATE_LdapLib_c691 WPP_ANNOTATE_LdapLib_c691_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c691 WPP_ANNOTATE_LdapLib_c691_FINAL("TMF:", "LdapLib.c", "LdapLib_c691", L"{", L"ptFilter, ItemWString -- 10" , L"dwResult, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c698_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0Failed to build request object from attributes list: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c698_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0Failed to build request object from attributes list: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c698
    #define WPP_ANNOTATE_LdapLib_c698 WPP_ANNOTATE_LdapLib_c698_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c698 WPP_ANNOTATE_LdapLib_c698_FINAL("TMF:", "LdapLib.c", "LdapLib_c698", L"{", L"LdapLastError(), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c710_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0Failed to initiate request <%10!s!> to LDAP server <%11!s!>: <err:%12!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c710_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0Failed to initiate request <%10!s!> to LDAP server <%11!s!>: <err:%12!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c710
    #define WPP_ANNOTATE_LdapLib_c710 WPP_ANNOTATE_LdapLib_c710_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c710 WPP_ANNOTATE_LdapLib_c710_FINAL("TMF:", "LdapLib.c", "LdapLib_c710", L"{", L"ptFilter, ItemWString -- 10" , L"pConnection->ptHost, ItemWString -- 11" , L"dwResult, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c714_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0Successfully initialized request <%10!s!> for server <%11!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c714_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0Successfully initialized request <%10!s!> for server <%11!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c714
    #define WPP_ANNOTATE_LdapLib_c714 WPP_ANNOTATE_LdapLib_c714_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c714 WPP_ANNOTATE_LdapLib_c714_FINAL("TMF:", "LdapLib.c", "LdapLib_c714", L"{", L"ptFilter, ItemWString -- 10" , L"pConnection->ptHost, ItemWString -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c791_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0Getting next entry of LDAP request <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c791_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0Getting next entry of LDAP request <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c791
    #define WPP_ANNOTATE_LdapLib_c791 WPP_ANNOTATE_LdapLib_c791_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c791 WPP_ANNOTATE_LdapLib_c791_FINAL("TMF:", "LdapLib.c", "LdapLib_c791", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c810_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0Reached the last entry in the current page for LDAP request <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c810_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0Reached the last entry in the current page for LDAP request <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c810
    #define WPP_ANNOTATE_LdapLib_c810 WPP_ANNOTATE_LdapLib_c810_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c810 WPP_ANNOTATE_LdapLib_c810_FINAL("TMF:", "LdapLib.c", "LdapLib_c810", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c819_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0LDAP server encounter an DSID error for LDAP request <%10!p!>.\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c819_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0LDAP server encounter an DSID error for LDAP request <%10!p!>.\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c819
    #define WPP_ANNOTATE_LdapLib_c819 WPP_ANNOTATE_LdapLib_c819_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c819 WPP_ANNOTATE_LdapLib_c819_FINAL("TMF:", "LdapLib.c", "LdapLib_c819", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c823_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0Unexpected error during LDAP request <%10!p!>: <%11!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c823_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0Unexpected error during LDAP request <%10!p!>: <%11!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c823
    #define WPP_ANNOTATE_LdapLib_c823 WPP_ANNOTATE_LdapLib_c823_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c823 WPP_ANNOTATE_LdapLib_c823_FINAL("TMF:", "LdapLib.c", "LdapLib_c823", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"dwResult, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c831_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0Retrieved <%10!u!> entries in the current page for LDAP request <%11!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c831_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0Retrieved <%10!u!> entries in the current page for LDAP request <%11!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c831
    #define WPP_ANNOTATE_LdapLib_c831 WPP_ANNOTATE_LdapLib_c831_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c831 WPP_ANNOTATE_LdapLib_c831_FINAL("TMF:", "LdapLib.c", "LdapLib_c831", L"{", L"pRequest->dwCurrentPageEntries, ItemLong -- 10" , L"pRequest->pLDAPSearch, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c837_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0Reached the last entry in the current page  for LDAP request <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c837_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0Reached the last entry in the current page  for LDAP request <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c837
    #define WPP_ANNOTATE_LdapLib_c837 WPP_ANNOTATE_LdapLib_c837_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c837 WPP_ANNOTATE_LdapLib_c837_FINAL("TMF:", "LdapLib.c", "LdapLib_c837", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c853_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0Unable to retrieve %10!s! entry in the current result page for LDAP request <%11!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c853_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0Unable to retrieve %10!s! entry in the current result page for LDAP request <%11!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c853
    #define WPP_ANNOTATE_LdapLib_c853 WPP_ANNOTATE_LdapLib_c853_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c853 WPP_ANNOTATE_LdapLib_c853_FINAL("TMF:", "LdapLib.c", "LdapLib_c853", L"{", L"(pRequest->dwCurrentEntryIndex == 0 ? 'first': 'next'), ItemString -- 10" , L"pRequest->pLDAPSearch, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c863_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0Unable to extract entry data from the current result page for LDAP request <%10!p!>: <err:%11!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c863_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0Unable to extract entry data from the current result page for LDAP request <%10!p!>: <err:%11!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c863
    #define WPP_ANNOTATE_LdapLib_c863 WPP_ANNOTATE_LdapLib_c863_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c863 WPP_ANNOTATE_LdapLib_c863_FINAL("TMF:", "LdapLib.c", "LdapLib_c863", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"LdapLastError(), ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c867_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0Successfully requested next entry for LDAP request <%10!p!> to server <%11!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c867_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0Successfully requested next entry for LDAP request <%10!p!> to server <%11!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c867
    #define WPP_ANNOTATE_LdapLib_c867 WPP_ANNOTATE_LdapLib_c867_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemWString -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c867 WPP_ANNOTATE_LdapLib_c867_FINAL("TMF:", "LdapLib.c", "LdapLib_c867", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"pConnection->ptHost, ItemWString -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c890_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0Starting release of LDAP attribute <%10!p!> (connection <%11!p!>)\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c890_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0Starting release of LDAP attribute <%10!p!> (connection <%11!p!>)\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c890
    #define WPP_ANNOTATE_LdapLib_c890 WPP_ANNOTATE_LdapLib_c890_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c890 WPP_ANNOTATE_LdapLib_c890_FINAL("TMF:", "LdapLib.c", "LdapLib_c890", L"{", L"(*ppAttribute), ItemPtr -- 10" , L"pConnection, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c901_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0Successfully released LDAP entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c901_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0Successfully released LDAP entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c901
    #define WPP_ANNOTATE_LdapLib_c901 WPP_ANNOTATE_LdapLib_c901_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c901 WPP_ANNOTATE_LdapLib_c901_FINAL("TMF:", "LdapLib.c", "LdapLib_c901", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c912_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0Starting release of LDAP entry <%10!p!> (connection <%11!p!>)\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c912_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0Starting release of LDAP entry <%10!p!> (connection <%11!p!>)\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c912
    #define WPP_ANNOTATE_LdapLib_c912 WPP_ANNOTATE_LdapLib_c912_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c912 WPP_ANNOTATE_LdapLib_c912_FINAL("TMF:", "LdapLib.c", "LdapLib_c912", L"{", L"(*ppEntry), ItemPtr -- 10" , L"pConnection, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c92_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0Unable to locate attribute <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c92_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0Unable to locate attribute <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c92
    #define WPP_ANNOTATE_LdapLib_c92 WPP_ANNOTATE_LdapLib_c92_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c92 WPP_ANNOTATE_LdapLib_c92_FINAL("TMF:", "LdapLib.c", "LdapLib_c92", L"{", L"ptCurrAttrName, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c924_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0Successfully released LDAP entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c924_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0Successfully released LDAP entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c924
    #define WPP_ANNOTATE_LdapLib_c924 WPP_ANNOTATE_LdapLib_c924_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c924 WPP_ANNOTATE_LdapLib_c924_FINAL("TMF:", "LdapLib.c", "LdapLib_c924", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c935_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0Starting release of LDAP request <%10!p!> (connection <%11!p!>)\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c935_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0Starting release of LDAP request <%10!p!> (connection <%11!p!>)\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c935
    #define WPP_ANNOTATE_LdapLib_c935 WPP_ANNOTATE_LdapLib_c935_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c935 WPP_ANNOTATE_LdapLib_c935_FINAL("TMF:", "LdapLib.c", "LdapLib_c935", L"{", L"(*ppRequest), ItemPtr -- 10" , L"pConnection, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c950_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0Successfully released LDAP request\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c950_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0Successfully released LDAP request\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c950
    #define WPP_ANNOTATE_LdapLib_c950 WPP_ANNOTATE_LdapLib_c950_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c950 WPP_ANNOTATE_LdapLib_c950_FINAL("TMF:", "LdapLib.c", "LdapLib_c950", L"{", L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif


#if 1
#if !defined(WPP_USER_MSG_GUID)

#define WPP_LOCAL_TraceGuids WPP_6c2ab7f35f9932903e6211500da4da35_Traceguids
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0x6c2ab7f3,0x5f99,0x3290,{0x3e,0x62,0x11,0x50,0x0d,0xa4,0xda,0x35}}, };

#else

#define WPP_LOCAL_MSG_VAR(Guid) WPP_XGLUE3(WPP_, WPP_GUID_NORM Guid, _Traceguids)

#define WPP_LOCAL_MSG_GUID(Guid) \
extern const __declspec(selectany) GUID WPP_LOCAL_MSG_VAR(Guid)[] = { WPP_GUID_STRUCT Guid }

WPP_LOCAL_MSG_GUID(WPP_USER_MSG_GUID);
#define WPP_LOCAL_TraceGuids WPP_LOCAL_MSG_VAR(WPP_USER_MSG_GUID)

#endif
#endif

#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#ifndef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR ,
#endif
#ifndef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET SIZE_T
#endif
#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((WPP_LOGPAIR_SIZET)(_Size))WPP_LOGPAIR_SEPARATOR
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_ENABLE_FLAG_BIT)
#define WPP_ENABLE_FLAG_BIT(flag) (WPP_CB[((flag) >> 16)].Control).Flags[( (0xFFFF & ((flag)-1) ) / 32)] & (1 << ( ((flag)-1) & 31 ))
#endif

#ifndef WPP_SF__def
#       define WPP_SF__def
WPP_INLINE void WPP_SF_(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id,  (void*)0); }
#endif  // #ifndef WPP_SF__def


//
// Generate the WPP_RECORDER_SP_ function    2
//
#ifndef WPP_RECORDER_SF__def
#       define WPP_RECORDER_SF__def
WPP_INLINE
VOID
WPP_RECORDER_SF_(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                    (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id,  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF__def


#ifndef WPP_SF_D_def
#       define WPP_SF_D_def
WPP_INLINE void WPP_SF_D(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1)  (void*)0); }
#endif  // #ifndef WPP_SF_D_def


//
// Generate the WPP_RECORDER_SP_D function    2
//
#ifndef WPP_RECORDER_SF_D_def
#       define WPP_RECORDER_SF_D_def
WPP_INLINE
VOID
WPP_RECORDER_SF_D(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int,_a1)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_D_def


#ifndef WPP_SF_Dq_def
#       define WPP_SF_Dq_def
WPP_INLINE void WPP_SF_Dq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_Dq_def


//
// Generate the WPP_RECORDER_SP_Dq function    2
//
#ifndef WPP_RECORDER_SF_Dq_def
#       define WPP_RECORDER_SF_Dq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_Dq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, const void* _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_Dq_def


#ifndef WPP_SF_S_def
#       define WPP_SF_S_def
WPP_INLINE void WPP_SF_S(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCWSTR _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGWSTR(_a1)  (void*)0); }
#endif  // #ifndef WPP_SF_S_def


//
// Generate the WPP_RECORDER_SP_S function    2
//
#ifndef WPP_RECORDER_SF_S_def
#       define WPP_RECORDER_SF_S_def
WPP_INLINE
VOID
WPP_RECORDER_SF_S(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , LPCWSTR _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGWSTR(_a1)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGWSTR(_a1)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_S_def


#ifndef WPP_SF_SD_def
#       define WPP_SF_SD_def
WPP_INLINE void WPP_SF_SD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCWSTR _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_SD_def


//
// Generate the WPP_RECORDER_SP_SD function    2
//
#ifndef WPP_RECORDER_SF_SD_def
#       define WPP_RECORDER_SF_SD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_SD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , LPCWSTR _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGWSTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_SD_def


#ifndef WPP_SF_SS_def
#       define WPP_SF_SS_def
WPP_INLINE void WPP_SF_SS(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCWSTR _a1, LPCWSTR _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGWSTR(_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_SS_def


//
// Generate the WPP_RECORDER_SP_SS function    2
//
#ifndef WPP_RECORDER_SF_SS_def
#       define WPP_RECORDER_SF_SS_def
WPP_INLINE
VOID
WPP_RECORDER_SF_SS(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , LPCWSTR _a1, LPCWSTR _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGWSTR(_a1) WPP_LOGWSTR(_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGWSTR(_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_SS_def


#ifndef WPP_SF_SSD_def
#       define WPP_SF_SSD_def
WPP_INLINE void WPP_SF_SSD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCWSTR _a1, LPCWSTR _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGWSTR(_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  (void*)0); }
#endif  // #ifndef WPP_SF_SSD_def


//
// Generate the WPP_RECORDER_SP_SSD function    2
//
#ifndef WPP_RECORDER_SF_SSD_def
#       define WPP_RECORDER_SF_SSD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_SSD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , LPCWSTR _a1, LPCWSTR _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGWSTR(_a1) WPP_LOGWSTR(_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGWSTR(_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_SSD_def


#ifndef WPP_SF_SSq_def
#       define WPP_SF_SSq_def
WPP_INLINE void WPP_SF_SSq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCWSTR _a1, LPCWSTR _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGWSTR(_a2) WPP_LOGTYPEVAL(const void*,_a3)  (void*)0); }
#endif  // #ifndef WPP_SF_SSq_def


//
// Generate the WPP_RECORDER_SP_SSq function    2
//
#ifndef WPP_RECORDER_SF_SSq_def
#       define WPP_RECORDER_SF_SSq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_SSq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , LPCWSTR _a1, LPCWSTR _a2, const void* _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGWSTR(_a1) WPP_LOGWSTR(_a2) WPP_LOGTYPEVAL(const void*,_a3)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGWSTR(_a2) WPP_LOGTYPEVAL(const void*,_a3)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_SSq_def


#ifndef WPP_SF_Sq_def
#       define WPP_SF_Sq_def
WPP_INLINE void WPP_SF_Sq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCWSTR _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_Sq_def


//
// Generate the WPP_RECORDER_SP_Sq function    2
//
#ifndef WPP_RECORDER_SF_Sq_def
#       define WPP_RECORDER_SF_Sq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_Sq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , LPCWSTR _a1, const void* _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGWSTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_Sq_def


#ifndef WPP_SF_q_def
#       define WPP_SF_q_def
WPP_INLINE void WPP_SF_q(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1)  (void*)0); }
#endif  // #ifndef WPP_SF_q_def


//
// Generate the WPP_RECORDER_SP_q function    2
//
#ifndef WPP_RECORDER_SF_q_def
#       define WPP_RECORDER_SF_q_def
WPP_INLINE
VOID
WPP_RECORDER_SF_q(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const void* _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(const void*,_a1)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(const void*,_a1)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_q_def


#ifndef WPP_SF_qD_def
#       define WPP_SF_qD_def
WPP_INLINE void WPP_SF_qD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_qD_def


//
// Generate the WPP_RECORDER_SP_qD function    2
//
#ifndef WPP_RECORDER_SF_qD_def
#       define WPP_RECORDER_SF_qD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_qD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const void* _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_qD_def


#ifndef WPP_SF_qS_def
#       define WPP_SF_qS_def
WPP_INLINE void WPP_SF_qS(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, LPCWSTR _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGWSTR(_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_qS_def


//
// Generate the WPP_RECORDER_SP_qS function    2
//
#ifndef WPP_RECORDER_SF_qS_def
#       define WPP_RECORDER_SF_qS_def
WPP_INLINE
VOID
WPP_RECORDER_SF_qS(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const void* _a1, LPCWSTR _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGWSTR(_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGWSTR(_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_qS_def


#ifndef WPP_SF_qq_def
#       define WPP_SF_qq_def
WPP_INLINE void WPP_SF_qq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_qq_def


//
// Generate the WPP_RECORDER_SP_qq function    2
//
#ifndef WPP_RECORDER_SF_qq_def
#       define WPP_RECORDER_SF_qq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_qq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const void* _a1, const void* _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_qq_def


#ifndef WPP_SF_sq_def
#       define WPP_SF_sq_def
WPP_INLINE void WPP_SF_sq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_sq_def


//
// Generate the WPP_RECORDER_SP_sq function    2
//
#ifndef WPP_RECORDER_SF_sq_def
#       define WPP_RECORDER_SF_sq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_sq_def


#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif

#ifndef WPP_LOG_ALWAYS
#  define WPP_LOG_ALWAYS(...)
#endif

#ifdef WPP_DEBUG
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c109(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c109) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    13, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c112(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c112) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    14, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c118(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c118) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    15, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c123(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c123) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    16, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c126(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c126) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    17, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c129(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c129) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    18, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c142(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c142) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_qq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    19, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c154(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c154) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    20, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c177(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c177) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    21, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c181(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c181) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    22, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c198(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c198) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_S(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    23, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c206(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c206) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    24, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c214(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c214) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    25, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c218(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c218) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_S(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    26, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c233(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c233) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    27, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c248(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c248) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    28, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c251(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c251) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    29, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c273(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c273) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    30, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c276(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c276) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    31, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c284(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c284) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    32, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c287(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c287) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    33, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c321(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c321) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    34, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c324(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c324) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    35, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c339(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c339) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    36, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c348(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c348) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    37, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c356(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c356) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    38, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c37(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c37) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_q(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    10, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c381(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c381) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    39, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c394(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c394) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    40, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c397(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c397) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_q(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    41, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c407(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c407) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    42, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c411(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c411) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    43, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c421(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c421) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    44, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c425(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c425) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    45, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c436(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c436) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    46, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c439(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c439) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    47, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c449(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c449) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    48, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c452(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c452) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    49, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c456(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c456) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    50, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c459(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c459) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    51, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c476(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c476) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    52, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c481(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c481) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    53, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c500(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c500) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    54, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c505(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c505) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    55, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c509(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c509) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    56, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c551(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c551) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_S(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    57, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c563(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c563) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    58, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c60(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c60) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_Sq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    11, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c607(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c607) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    59, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c617(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c617) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    60, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c621(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c621) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    61, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c662(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c662) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    62, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c686(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c686) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_SS(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    63, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c691(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c691) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    64, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c698(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c698) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    65, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c710(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c710) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_SSD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    66, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c714(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c714) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_SS(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    67, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c791(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c791) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_q(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    68, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c810(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c810) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_q(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    69, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c819(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c819) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_q(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    70, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c823(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c823) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_qD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    71, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c831(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c831) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_Dq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    72, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c837(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c837) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_q(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    73, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c853(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c853) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_sq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    74, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c863(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c863) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_qD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    75, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c867(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c867) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_qS(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    76, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c890(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c890) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_qq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    77, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c901(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c901) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    78, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c912(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c912) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_qq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    79, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c92(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c92) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    12, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c924(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c924) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    80, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c935(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c935) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_qq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    81, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c950(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c950) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                    82, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c109(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c109) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     13, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c112(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c112) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     14, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c118(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c118) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     15, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c123(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c123) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     16, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c126(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c126) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     17, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c129(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c129) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     18, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c142(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c142) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_qq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     19, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c154(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c154) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     20, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c177(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c177) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     21, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c181(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c181) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     22, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c198(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c198) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_S(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     23, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c206(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c206) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     24, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c214(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c214) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     25, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c218(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c218) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_S(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     26, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c233(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c233) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     27, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c248(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c248) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     28, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c251(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c251) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     29, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c273(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c273) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     30, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c276(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c276) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     31, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c284(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c284) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     32, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c287(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c287) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     33, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c321(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c321) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     34, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c324(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c324) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     35, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c339(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c339) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     36, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c348(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c348) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     37, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c356(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c356) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     38, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c37(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c37) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_q(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     10, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c381(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c381) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     39, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c394(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c394) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     40, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c397(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c397) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_q(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     41, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c407(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c407) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     42, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c411(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c411) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     43, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c421(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c421) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     44, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c425(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c425) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     45, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c436(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c436) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     46, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c439(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c439) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     47, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c449(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c449) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     48, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c452(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c452) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     49, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c456(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c456) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     50, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c459(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c459) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     51, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c476(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c476) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     52, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c481(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c481) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     53, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c500(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c500) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     54, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c505(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c505) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     55, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c509(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c509) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     56, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c551(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c551) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_S(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     57, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c563(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c563) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     58, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c60(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c60) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_Sq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     11, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c607(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c607) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     59, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c617(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c617) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     60, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c621(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c621) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     61, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c662(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c662) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     62, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c686(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c686) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SS(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     63, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c691(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c691) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     64, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c698(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c698) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     65, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c710(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c710) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SSD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     66, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c714(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c714) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SS(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     67, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c791(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c791) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_q(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     68, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c810(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c810) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_q(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     69, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c819(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c819) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_q(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     70, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c823(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c823) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_qD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     71, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c831(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c831) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_Dq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     72, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c837(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c837) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_q(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     73, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c853(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c853) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_sq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     74, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c863(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c863) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_qD(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     75, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c867(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c867) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_qS(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     76, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c890(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c890) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_qq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     77, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c901(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c901) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     78, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c912(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c912) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_qq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     79, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c92(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c92) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_SSq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     12, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c924(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c924) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     80, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c935(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c935) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_qq(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     81, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c950(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c950) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                                     82, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif


#ifdef WPP_DEBUG
#else
#endif



#if defined(__cplusplus)
};
#endif

#else
// template tracemacro.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c109
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c112
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c118
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c123
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c126
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c129
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c142
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c154
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c177
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c181
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c198
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c206
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c214
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c218
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c233
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c248
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c251
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c273
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c276
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c284
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c287
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c321
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c324
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c339
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c348
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c356
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c37
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c381
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c394
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c397
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c407
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c411
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c421
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c425
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c436
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c439
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c449
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c452
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c456
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c459
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c476
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c481
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c500
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c505
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c509
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c551
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c563
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c60
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c607
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c617
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c621
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c662
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c686
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c691
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c698
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c710
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c714
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c791
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c810
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c819
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c823
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c831
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c837
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c853
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c863
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c867
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c890
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c901
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c912
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c92
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c924
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c935
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_LdapLib_c950
#endif
#ifdef WPP_EMIT_FUNC_NAME
#define WPP_FUNC_NAME L" FUNC=" _WPPW(__FUNCTION__)
#else
#define WPP_FUNC_NAME
#endif

#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c109_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0Unable to extract monovaluated attributes <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c109_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0Unable to extract monovaluated attributes <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c109
    #define WPP_ANNOTATE_LdapLib_c109 WPP_ANNOTATE_LdapLib_c109_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c109 WPP_ANNOTATE_LdapLib_c109_FINAL("TMF:", "LdapLib.c", "LdapLib_c109", L"{", L"ptCurrAttrNameWithRange, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c112_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0Successfully extracted monovaluated attribute <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c112_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0Successfully extracted monovaluated attribute <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c112
    #define WPP_ANNOTATE_LdapLib_c112 WPP_ANNOTATE_LdapLib_c112_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c112 WPP_ANNOTATE_LdapLib_c112_FINAL("TMF:", "LdapLib.c", "LdapLib_c112", L"{", L"ptCurrAttrNameWithRange, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c118_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0No such object (non-fatal) <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c118_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0No such object (non-fatal) <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c118
    #define WPP_ANNOTATE_LdapLib_c118 WPP_ANNOTATE_LdapLib_c118_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c118 WPP_ANNOTATE_LdapLib_c118_FINAL("TMF:", "LdapLib.c", "LdapLib_c118", L"{", L"ptCurrAttrNameWithRange, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c123_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0Unable to extract multivaluated attributes <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c123_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0Unable to extract multivaluated attributes <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c123
    #define WPP_ANNOTATE_LdapLib_c123 WPP_ANNOTATE_LdapLib_c123_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c123 WPP_ANNOTATE_LdapLib_c123_FINAL("TMF:", "LdapLib.c", "LdapLib_c123", L"{", L"ptCurrAttrNameWithRange, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c126_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0Successfully extracted multivaluated attribute <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c126_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0Successfully extracted multivaluated attribute <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c126
    #define WPP_ANNOTATE_LdapLib_c126 WPP_ANNOTATE_LdapLib_c126_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c126 WPP_ANNOTATE_LdapLib_c126_FINAL("TMF:", "LdapLib.c", "LdapLib_c126", L"{", L"ptCurrAttrNameWithRange, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c129_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0Successfully stored extracted attribute <%10!s!> into result set for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c129_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0Successfully stored extracted attribute <%10!s!> into result set for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c129
    #define WPP_ANNOTATE_LdapLib_c129 WPP_ANNOTATE_LdapLib_c129_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c129 WPP_ANNOTATE_LdapLib_c129_FINAL("TMF:", "LdapLib.c", "LdapLib_c129", L"{", L"ptCurrAttrNameWithRange, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c142_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0Successfully extracted data from LDAP message <%10!p!> to LDAP entry <%11!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c142_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0Successfully extracted data from LDAP message <%10!p!> to LDAP entry <%11!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c142
    #define WPP_ANNOTATE_LdapLib_c142 WPP_ANNOTATE_LdapLib_c142_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c142 WPP_ANNOTATE_LdapLib_c142_FINAL("TMF:", "LdapLib.c", "LdapLib_c142", L"{", L"pLdapMessage, ItemPtr -- 10" , L"(*ppEntry), ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c154_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0Starting build of request object from attributes list\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c154_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0Starting build of request object from attributes list\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c154
    #define WPP_ANNOTATE_LdapLib_c154 WPP_ANNOTATE_LdapLib_c154_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c154 WPP_ANNOTATE_LdapLib_c154_FINAL("TMF:", "LdapLib.c", "LdapLib_c154", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c177_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0No attributes specified, requesting all attributes\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c177_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0No attributes specified, requesting all attributes\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c177
    #define WPP_ANNOTATE_LdapLib_c177 WPP_ANNOTATE_LdapLib_c177_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c177 WPP_ANNOTATE_LdapLib_c177_FINAL("TMF:", "LdapLib.c", "LdapLib_c177", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c181_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0Successfully built request object from attributes list\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c181_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0Successfully built request object from attributes list\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c181
    #define WPP_ANNOTATE_LdapLib_c181 WPP_ANNOTATE_LdapLib_c181_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c181 WPP_ANNOTATE_LdapLib_c181_FINAL("TMF:", "LdapLib.c", "LdapLib_c181", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c198_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0Starting non-paged request <%10!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c198_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0Starting non-paged request <%10!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c198
    #define WPP_ANNOTATE_LdapLib_c198 WPP_ANNOTATE_LdapLib_c198_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c198 WPP_ANNOTATE_LdapLib_c198_FINAL("TMF:", "LdapLib.c", "LdapLib_c198", L"{", L"ptFilter, ItemWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c206_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0Failed to build request object with attributes list: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c206_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0Failed to build request object with attributes list: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c206
    #define WPP_ANNOTATE_LdapLib_c206 WPP_ANNOTATE_LdapLib_c206_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c206 WPP_ANNOTATE_LdapLib_c206_FINAL("TMF:", "LdapLib.c", "LdapLib_c206", L"{", L"LdapLastError(), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c214_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0Failed to execute non-paged LDAP request <%10!s!>: <err:%11!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c214_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0Failed to execute non-paged LDAP request <%10!s!>: <err:%11!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c214
    #define WPP_ANNOTATE_LdapLib_c214 WPP_ANNOTATE_LdapLib_c214_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c214 WPP_ANNOTATE_LdapLib_c214_FINAL("TMF:", "LdapLib.c", "LdapLib_c214", L"{", L"ptFilter, ItemWString -- 10" , L"dwResult, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c218_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0Successfully sent non-paged request <%10!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c218_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0Successfully sent non-paged request <%10!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c218
    #define WPP_ANNOTATE_LdapLib_c218 WPP_ANNOTATE_LdapLib_c218_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c218 WPP_ANNOTATE_LdapLib_c218_FINAL("TMF:", "LdapLib.c", "LdapLib_c218", L"{", L"ptFilter, ItemWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c233_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0Starting RootDSE attributes extraction\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c233_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0Starting RootDSE attributes extraction\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c233
    #define WPP_ANNOTATE_LdapLib_c233 WPP_ANNOTATE_LdapLib_c233_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c233 WPP_ANNOTATE_LdapLib_c233_FINAL("TMF:", "LdapLib.c", "LdapLib_c233", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c248_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0Failed to bind anonymously to LDAP server: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c248_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0Failed to bind anonymously to LDAP server: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c248
    #define WPP_ANNOTATE_LdapLib_c248 WPP_ANNOTATE_LdapLib_c248_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c248 WPP_ANNOTATE_LdapLib_c248_FINAL("TMF:", "LdapLib.c", "LdapLib_c248", L"{", L"dwResult, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c251_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0Successfully binded to LDAP server anonymously\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c251_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0Successfully binded to LDAP server anonymously\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c251
    #define WPP_ANNOTATE_LdapLib_c251 WPP_ANNOTATE_LdapLib_c251_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c251 WPP_ANNOTATE_LdapLib_c251_FINAL("TMF:", "LdapLib.c", "LdapLib_c251", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c273_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0Failed to request RootDSE attributes: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c273_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0Failed to request RootDSE attributes: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c273
    #define WPP_ANNOTATE_LdapLib_c273 WPP_ANNOTATE_LdapLib_c273_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c273 WPP_ANNOTATE_LdapLib_c273_FINAL("TMF:", "LdapLib.c", "LdapLib_c273", L"{", L"dwResult, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c276_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0Successfully initialized RootDSE request\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c276_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0Successfully initialized RootDSE request\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c276
    #define WPP_ANNOTATE_LdapLib_c276 WPP_ANNOTATE_LdapLib_c276_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c276 WPP_ANNOTATE_LdapLib_c276_FINAL("TMF:", "LdapLib.c", "LdapLib_c276", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c284_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0Error while getting LDAP entry for RootDSE request: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c284_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0Error while getting LDAP entry for RootDSE request: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c284
    #define WPP_ANNOTATE_LdapLib_c284 WPP_ANNOTATE_LdapLib_c284_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c284 WPP_ANNOTATE_LdapLib_c284_FINAL("TMF:", "LdapLib.c", "LdapLib_c284", L"{", L"LdapLastError(), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c287_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0Successfully got LDAP entry for RootDSE request\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c287_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0Successfully got LDAP entry for RootDSE request\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c287
    #define WPP_ANNOTATE_LdapLib_c287 WPP_ANNOTATE_LdapLib_c287_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c287 WPP_ANNOTATE_LdapLib_c287_FINAL("TMF:", "LdapLib.c", "LdapLib_c287", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c321_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0Failed to retreive all RootDSE attributes, some of them may be missing.\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c321_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0Failed to retreive all RootDSE attributes, some of them may be missing.\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c321
    #define WPP_ANNOTATE_LdapLib_c321 WPP_ANNOTATE_LdapLib_c321_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c321 WPP_ANNOTATE_LdapLib_c321_FINAL("TMF:", "LdapLib.c", "LdapLib_c321", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c324_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0Successfully retreived all RootDSE attributes\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c324_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0Successfully retreived all RootDSE attributes\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c324
    #define WPP_ANNOTATE_LdapLib_c324 WPP_ANNOTATE_LdapLib_c324_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c324 WPP_ANNOTATE_LdapLib_c324_FINAL("TMF:", "LdapLib.c", "LdapLib_c324", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c339_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0Successfully ended RootDSE attributes extraction\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c339_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0Successfully ended RootDSE attributes extraction\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c339
    #define WPP_ANNOTATE_LdapLib_c339 WPP_ANNOTATE_LdapLib_c339_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c339 WPP_ANNOTATE_LdapLib_c339_FINAL("TMF:", "LdapLib.c", "LdapLib_c339", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c348_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0LibLdap WPP initialized\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c348_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0LibLdap WPP initialized\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c348
    #define WPP_ANNOTATE_LdapLib_c348 WPP_ANNOTATE_LdapLib_c348_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c348 WPP_ANNOTATE_LdapLib_c348_FINAL("TMF:", "LdapLib.c", "LdapLib_c348", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c356_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0Cleanup LibLdap WPP\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c356_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0Cleanup LibLdap WPP\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c356
    #define WPP_ANNOTATE_LdapLib_c356 WPP_ANNOTATE_LdapLib_c356_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c356 WPP_ANNOTATE_LdapLib_c356_FINAL("TMF:", "LdapLib.c", "LdapLib_c356", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c37_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0Starting data extraction from LDAP message <%10!p!> to LDAP entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c37_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0Starting data extraction from LDAP message <%10!p!> to LDAP entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c37
    #define WPP_ANNOTATE_LdapLib_c37 WPP_ANNOTATE_LdapLib_c37_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c37 WPP_ANNOTATE_LdapLib_c37_FINAL("TMF:", "LdapLib.c", "LdapLib_c37", L"{", L"pLdapMessage, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c381_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0Starting LDAP connection to host <%10!s!> on port <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c381_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0Starting LDAP connection to host <%10!s!> on port <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c381
    #define WPP_ANNOTATE_LdapLib_c381 WPP_ANNOTATE_LdapLib_c381_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c381 WPP_ANNOTATE_LdapLib_c381_FINAL("TMF:", "LdapLib.c", "LdapLib_c381", L"{", L"ptHost, ItemWString -- 10" , L"dwPort, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c394_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0Failed to create heap: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ALLOCATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c394_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0Failed to create heap: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ALLOCATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c394
    #define WPP_ANNOTATE_LdapLib_c394 WPP_ANNOTATE_LdapLib_c394_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c394 WPP_ANNOTATE_LdapLib_c394_FINAL("TMF:", "LdapLib.c", "LdapLib_c394", L"{", L"UtilsGetLastError(), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c397_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0Successfully created heap: <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ALLOCATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c397_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0Successfully created heap: <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ALLOCATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c397
    #define WPP_ANNOTATE_LdapLib_c397 WPP_ANNOTATE_LdapLib_c397_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c397 WPP_ANNOTATE_LdapLib_c397_FINAL("TMF:", "LdapLib.c", "LdapLib_c397", L"{", L"pHeap, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c407_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0Failed to init connection to LDAP server: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c407_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0Failed to init connection to LDAP server: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c407
    #define WPP_ANNOTATE_LdapLib_c407 WPP_ANNOTATE_LdapLib_c407_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c407 WPP_ANNOTATE_LdapLib_c407_FINAL("TMF:", "LdapLib.c", "LdapLib_c407", L"{", L"dwResult, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c411_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0Successfully initialized connection to LDAP server\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c411_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0Successfully initialized connection to LDAP server\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c411
    #define WPP_ANNOTATE_LdapLib_c411 WPP_ANNOTATE_LdapLib_c411_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c411 WPP_ANNOTATE_LdapLib_c411_FINAL("TMF:", "LdapLib.c", "LdapLib_c411", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c421_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0Failed to set LDAP options\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONFIGURATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c421_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0Failed to set LDAP options\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONFIGURATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c421
    #define WPP_ANNOTATE_LdapLib_c421 WPP_ANNOTATE_LdapLib_c421_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c421 WPP_ANNOTATE_LdapLib_c421_FINAL("TMF:", "LdapLib.c", "LdapLib_c421", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c425_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0Successfully set all LDAP options\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONFIGURATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c425_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0Successfully set all LDAP options\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONFIGURATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c425
    #define WPP_ANNOTATE_LdapLib_c425 WPP_ANNOTATE_LdapLib_c425_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c425 WPP_ANNOTATE_LdapLib_c425_FINAL("TMF:", "LdapLib.c", "LdapLib_c425", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c436_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0Failed to connect to LDAP server: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c436_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0Failed to connect to LDAP server: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c436
    #define WPP_ANNOTATE_LdapLib_c436 WPP_ANNOTATE_LdapLib_c436_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c436 WPP_ANNOTATE_LdapLib_c436_FINAL("TMF:", "LdapLib.c", "LdapLib_c436", L"{", L"dwResult, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c439_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0Successfully connected to LDAP server\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c439_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0Successfully connected to LDAP server\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c439
    #define WPP_ANNOTATE_LdapLib_c439 WPP_ANNOTATE_LdapLib_c439_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c439 WPP_ANNOTATE_LdapLib_c439_FINAL("TMF:", "LdapLib.c", "LdapLib_c439", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c449_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0Failed to extract RootDSE attributes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c449_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0Failed to extract RootDSE attributes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c449
    #define WPP_ANNOTATE_LdapLib_c449 WPP_ANNOTATE_LdapLib_c449_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c449 WPP_ANNOTATE_LdapLib_c449_FINAL("TMF:", "LdapLib.c", "LdapLib_c449", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c452_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0Successfully extracted RootDSE attributes\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c452_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0Successfully extracted RootDSE attributes\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c452
    #define WPP_ANNOTATE_LdapLib_c452 WPP_ANNOTATE_LdapLib_c452_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c452 WPP_ANNOTATE_LdapLib_c452_FINAL("TMF:", "LdapLib.c", "LdapLib_c452", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c456_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0Skipping RootDSE extraction\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c456_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0Skipping RootDSE extraction\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c456
    #define WPP_ANNOTATE_LdapLib_c456 WPP_ANNOTATE_LdapLib_c456_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c456 WPP_ANNOTATE_LdapLib_c456_FINAL("TMF:", "LdapLib.c", "LdapLib_c456", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c459_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0Successfully established LDAP connection to host <%10!s!> on port <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c459_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0Successfully established LDAP connection to host <%10!s!> on port <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c459
    #define WPP_ANNOTATE_LdapLib_c459 WPP_ANNOTATE_LdapLib_c459_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c459 WPP_ANNOTATE_LdapLib_c459_FINAL("TMF:", "LdapLib.c", "LdapLib_c459", L"{", L"ptHost, ItemWString -- 10" , L"dwPort, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c476_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0cannot allocate <%10!u!> bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c476_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0cannot allocate <%10!u!> bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c476
    #define WPP_ANNOTATE_LdapLib_c476 WPP_ANNOTATE_LdapLib_c476_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c476 WPP_ANNOTATE_LdapLib_c476_FINAL("TMF:", "LdapLib.c", "LdapLib_c476", L"{", L"(DWORD)(strlen(ptHost) + 1) * sizeof(LPWSTR), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c481_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0Failed to convert ANSI string: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c481_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0Failed to convert ANSI string: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c481
    #define WPP_ANNOTATE_LdapLib_c481 WPP_ANNOTATE_LdapLib_c481_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c481 WPP_ANNOTATE_LdapLib_c481_FINAL("TMF:", "LdapLib.c", "LdapLib_c481", L"{", L"GetLastError(), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c500_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0Starting binding to DN <%10!s!> using authentication method <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c500_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0Starting binding to DN <%10!s!> using authentication method <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c500
    #define WPP_ANNOTATE_LdapLib_c500 WPP_ANNOTATE_LdapLib_c500_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c500 WPP_ANNOTATE_LdapLib_c500_FINAL("TMF:", "LdapLib.c", "LdapLib_c500", L"{", L"ptBindingDn, ItemWString -- 10" , L"eAuthMethod, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c505_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0Failed to bind to DN <%10!s!> using authentication method <%11!u!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c505_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0Failed to bind to DN <%10!s!> using authentication method <%11!u!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c505
    #define WPP_ANNOTATE_LdapLib_c505 WPP_ANNOTATE_LdapLib_c505_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c505 WPP_ANNOTATE_LdapLib_c505_FINAL("TMF:", "LdapLib.c", "LdapLib_c505", L"{", L"ptBindingDn, ItemWString -- 10" , L"eAuthMethod, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c509_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0Successfully binded to DN <%10!s!> using authentication method <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c509_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0Successfully binded to DN <%10!s!> using authentication method <%11!u!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c509
    #define WPP_ANNOTATE_LdapLib_c509 WPP_ANNOTATE_LdapLib_c509_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c509 WPP_ANNOTATE_LdapLib_c509_FINAL("TMF:", "LdapLib.c", "LdapLib_c509", L"{", L"ptBindingDn, ItemWString -- 10" , L"eAuthMethod, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c551_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0Binding using explicit authentication with username <%10!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c551_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0Binding using explicit authentication with username <%10!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c551
    #define WPP_ANNOTATE_LdapLib_c551 WPP_ANNOTATE_LdapLib_c551_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c551 WPP_ANNOTATE_LdapLib_c551_FINAL("TMF:", "LdapLib.c", "LdapLib_c551", L"{", L"ptUsername, ItemWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c563_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0Binding using implicit authentication\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c563_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0Binding using implicit authentication\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c563
    #define WPP_ANNOTATE_LdapLib_c563 WPP_ANNOTATE_LdapLib_c563_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c563 WPP_ANNOTATE_LdapLib_c563_FINAL("TMF:", "LdapLib.c", "LdapLib_c563", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c60_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0Processing entry <%10!s!> for LDAP request <%11!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c60_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0Processing entry <%10!s!> for LDAP request <%11!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c60
    #define WPP_ANNOTATE_LdapLib_c60 WPP_ANNOTATE_LdapLib_c60_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c60 WPP_ANNOTATE_LdapLib_c60_FINAL("TMF:", "LdapLib.c", "LdapLib_c60", L"{", L"(*ppEntry)->ptDn, ItemWString -- 10" , L"pRequest->pLDAPSearch, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c607_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0Starting closing LDAP connection\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c607_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0Starting closing LDAP connection\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c607
    #define WPP_ANNOTATE_LdapLib_c607 WPP_ANNOTATE_LdapLib_c607_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c607 WPP_ANNOTATE_LdapLib_c607_FINAL("TMF:", "LdapLib.c", "LdapLib_c607", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c617_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0Failed to unbind from LDAP server: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c617_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0Failed to unbind from LDAP server: <%10!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c617
    #define WPP_ANNOTATE_LdapLib_c617 WPP_ANNOTATE_LdapLib_c617_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c617 WPP_ANNOTATE_LdapLib_c617_FINAL("TMF:", "LdapLib.c", "LdapLib_c617", L"{", L"dwResult, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c621_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0Successfully unbinded from LDAP server\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c621_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0Successfully unbinded from LDAP server\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CONNECTION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c621
    #define WPP_ANNOTATE_LdapLib_c621 WPP_ANNOTATE_LdapLib_c621_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c621 WPP_ANNOTATE_LdapLib_c621_FINAL("TMF:", "LdapLib.c", "LdapLib_c621", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c662_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0Successfully closed LDAP connection\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c662_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0Successfully closed LDAP connection\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c662
    #define WPP_ANNOTATE_LdapLib_c662 WPP_ANNOTATE_LdapLib_c662_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c662 WPP_ANNOTATE_LdapLib_c662_FINAL("TMF:", "LdapLib.c", "LdapLib_c662", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c686_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0Starting LDAP request to server <%10!s!> with filter <%11!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c686_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0Starting LDAP request to server <%10!s!> with filter <%11!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c686
    #define WPP_ANNOTATE_LdapLib_c686 WPP_ANNOTATE_LdapLib_c686_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c686 WPP_ANNOTATE_LdapLib_c686_FINAL("TMF:", "LdapLib.c", "LdapLib_c686", L"{", L"pConnection->ptHost, ItemWString -- 10" , L"ptFilter, ItemWString -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c691_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0Invalid LDAP filter <%10!s!>: <err:%11!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c691_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0Invalid LDAP filter <%10!s!>: <err:%11!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c691
    #define WPP_ANNOTATE_LdapLib_c691 WPP_ANNOTATE_LdapLib_c691_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c691 WPP_ANNOTATE_LdapLib_c691_FINAL("TMF:", "LdapLib.c", "LdapLib_c691", L"{", L"ptFilter, ItemWString -- 10" , L"dwResult, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c698_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0Failed to build request object from attributes list: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c698_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0Failed to build request object from attributes list: <err:%10!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c698
    #define WPP_ANNOTATE_LdapLib_c698 WPP_ANNOTATE_LdapLib_c698_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c698 WPP_ANNOTATE_LdapLib_c698_FINAL("TMF:", "LdapLib.c", "LdapLib_c698", L"{", L"LdapLastError(), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c710_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0Failed to initiate request <%10!s!> to LDAP server <%11!s!>: <err:%12!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c710_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0Failed to initiate request <%10!s!> to LDAP server <%11!s!>: <err:%12!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c710
    #define WPP_ANNOTATE_LdapLib_c710 WPP_ANNOTATE_LdapLib_c710_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c710 WPP_ANNOTATE_LdapLib_c710_FINAL("TMF:", "LdapLib.c", "LdapLib_c710", L"{", L"ptFilter, ItemWString -- 10" , L"pConnection->ptHost, ItemWString -- 11" , L"dwResult, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c714_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0Successfully initialized request <%10!s!> for server <%11!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c714_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0Successfully initialized request <%10!s!> for server <%11!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c714
    #define WPP_ANNOTATE_LdapLib_c714 WPP_ANNOTATE_LdapLib_c714_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c714 WPP_ANNOTATE_LdapLib_c714_FINAL("TMF:", "LdapLib.c", "LdapLib_c714", L"{", L"ptFilter, ItemWString -- 10" , L"pConnection->ptHost, ItemWString -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c791_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0Getting next entry of LDAP request <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c791_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0Getting next entry of LDAP request <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c791
    #define WPP_ANNOTATE_LdapLib_c791 WPP_ANNOTATE_LdapLib_c791_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c791 WPP_ANNOTATE_LdapLib_c791_FINAL("TMF:", "LdapLib.c", "LdapLib_c791", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c810_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0Reached the last entry in the current page for LDAP request <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c810_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0Reached the last entry in the current page for LDAP request <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c810
    #define WPP_ANNOTATE_LdapLib_c810 WPP_ANNOTATE_LdapLib_c810_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c810 WPP_ANNOTATE_LdapLib_c810_FINAL("TMF:", "LdapLib.c", "LdapLib_c810", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c819_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0LDAP server encounter an DSID error for LDAP request <%10!p!>.\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c819_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0LDAP server encounter an DSID error for LDAP request <%10!p!>.\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c819
    #define WPP_ANNOTATE_LdapLib_c819 WPP_ANNOTATE_LdapLib_c819_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c819 WPP_ANNOTATE_LdapLib_c819_FINAL("TMF:", "LdapLib.c", "LdapLib_c819", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c823_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0Unexpected error during LDAP request <%10!p!>: <%11!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c823_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0Unexpected error during LDAP request <%10!p!>: <%11!#x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c823
    #define WPP_ANNOTATE_LdapLib_c823 WPP_ANNOTATE_LdapLib_c823_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c823 WPP_ANNOTATE_LdapLib_c823_FINAL("TMF:", "LdapLib.c", "LdapLib_c823", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"dwResult, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c831_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0Retrieved <%10!u!> entries in the current page for LDAP request <%11!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c831_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0Retrieved <%10!u!> entries in the current page for LDAP request <%11!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c831
    #define WPP_ANNOTATE_LdapLib_c831 WPP_ANNOTATE_LdapLib_c831_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c831 WPP_ANNOTATE_LdapLib_c831_FINAL("TMF:", "LdapLib.c", "LdapLib_c831", L"{", L"pRequest->dwCurrentPageEntries, ItemLong -- 10" , L"pRequest->pLDAPSearch, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c837_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0Reached the last entry in the current page  for LDAP request <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c837_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0Reached the last entry in the current page  for LDAP request <%10!p!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c837
    #define WPP_ANNOTATE_LdapLib_c837 WPP_ANNOTATE_LdapLib_c837_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c837 WPP_ANNOTATE_LdapLib_c837_FINAL("TMF:", "LdapLib.c", "LdapLib_c837", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c853_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0Unable to retrieve %10!s! entry in the current result page for LDAP request <%11!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c853_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0Unable to retrieve %10!s! entry in the current result page for LDAP request <%11!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c853
    #define WPP_ANNOTATE_LdapLib_c853 WPP_ANNOTATE_LdapLib_c853_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c853 WPP_ANNOTATE_LdapLib_c853_FINAL("TMF:", "LdapLib.c", "LdapLib_c853", L"{", L"(pRequest->dwCurrentEntryIndex == 0 ? 'first': 'next'), ItemString -- 10" , L"pRequest->pLDAPSearch, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c863_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0Unable to extract entry data from the current result page for LDAP request <%10!p!>: <err:%11!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c863_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0Unable to extract entry data from the current result page for LDAP request <%10!p!>: <err:%11!#08x!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c863
    #define WPP_ANNOTATE_LdapLib_c863 WPP_ANNOTATE_LdapLib_c863_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c863 WPP_ANNOTATE_LdapLib_c863_FINAL("TMF:", "LdapLib.c", "LdapLib_c863", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"LdapLastError(), ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c867_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0Successfully requested next entry for LDAP request <%10!p!> to server <%11!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c867_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0Successfully requested next entry for LDAP request <%10!p!> to server <%11!s!>\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c867
    #define WPP_ANNOTATE_LdapLib_c867 WPP_ANNOTATE_LdapLib_c867_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemWString -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c867 WPP_ANNOTATE_LdapLib_c867_FINAL("TMF:", "LdapLib.c", "LdapLib_c867", L"{", L"pRequest->pLDAPSearch, ItemPtr -- 10" , L"pConnection->ptHost, ItemWString -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c890_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0Starting release of LDAP attribute <%10!p!> (connection <%11!p!>)\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c890_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0Starting release of LDAP attribute <%10!p!> (connection <%11!p!>)\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c890
    #define WPP_ANNOTATE_LdapLib_c890 WPP_ANNOTATE_LdapLib_c890_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c890 WPP_ANNOTATE_LdapLib_c890_FINAL("TMF:", "LdapLib.c", "LdapLib_c890", L"{", L"(*ppAttribute), ItemPtr -- 10" , L"pConnection, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c901_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0Successfully released LDAP entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c901_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0Successfully released LDAP entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c901
    #define WPP_ANNOTATE_LdapLib_c901 WPP_ANNOTATE_LdapLib_c901_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c901 WPP_ANNOTATE_LdapLib_c901_FINAL("TMF:", "LdapLib.c", "LdapLib_c901", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c912_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0Starting release of LDAP entry <%10!p!> (connection <%11!p!>)\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c912_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0Starting release of LDAP entry <%10!p!> (connection <%11!p!>)\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c912
    #define WPP_ANNOTATE_LdapLib_c912 WPP_ANNOTATE_LdapLib_c912_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c912 WPP_ANNOTATE_LdapLib_c912_FINAL("TMF:", "LdapLib.c", "LdapLib_c912", L"{", L"(*ppEntry), ItemPtr -- 10" , L"pConnection, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c92_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0Unable to locate attribute <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c92_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0Unable to locate attribute <%10!s!> for entry <%11!s!> during LDAP request <%12!p!>\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=REQUEST" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c92
    #define WPP_ANNOTATE_LdapLib_c92 WPP_ANNOTATE_LdapLib_c92_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemWString -- 10" , L"Arg, ItemWString -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c92 WPP_ANNOTATE_LdapLib_c92_FINAL("TMF:", "LdapLib.c", "LdapLib_c92", L"{", L"ptCurrAttrName, ItemWString -- 10" , L"(*ppEntry)->ptDn, ItemWString -- 11" , L"pRequest->pLDAPSearch, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c924_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0Successfully released LDAP entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c924_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0Successfully released LDAP entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c924
    #define WPP_ANNOTATE_LdapLib_c924 WPP_ANNOTATE_LdapLib_c924_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c924 WPP_ANNOTATE_LdapLib_c924_FINAL("TMF:", "LdapLib.c", "LdapLib_c924", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c935_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0Starting release of LDAP request <%10!p!> (connection <%11!p!>)\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c935_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0Starting release of LDAP request <%10!p!> (connection <%11!p!>)\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=INITIALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c935
    #define WPP_ANNOTATE_LdapLib_c935 WPP_ANNOTATE_LdapLib_c935_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c935 WPP_ANNOTATE_LdapLib_c935_FINAL("TMF:", "LdapLib.c", "LdapLib_c935", L"{", L"(*ppRequest), ItemPtr -- 10" , L"pConnection, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_LdapLib_c950_FINAL(P, File, Name, ...)    __annotation(L ## P, L"6c2ab7f3-5f99-3290-3e62-11500da4da35 src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0Successfully released LDAP request\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_LdapLib_c950_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"src // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0Successfully released LDAP request\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FINALIZATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_LdapLib_c950
    #define WPP_ANNOTATE_LdapLib_c950 WPP_ANNOTATE_LdapLib_c950_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_LdapLib_c950 WPP_ANNOTATE_LdapLib_c950_FINAL("TMF:", "LdapLib.c", "LdapLib_c950", L"{", L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif


#if 1
#if !defined(WPP_USER_MSG_GUID)

#define WPP_LOCAL_TraceGuids WPP_6c2ab7f35f9932903e6211500da4da35_Traceguids
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0x6c2ab7f3,0x5f99,0x3290,{0x3e,0x62,0x11,0x50,0x0d,0xa4,0xda,0x35}}, };

#else

#define WPP_LOCAL_MSG_VAR(Guid) WPP_XGLUE3(WPP_, WPP_GUID_NORM Guid, _Traceguids)

#define WPP_LOCAL_MSG_GUID(Guid) \
extern const __declspec(selectany) GUID WPP_LOCAL_MSG_VAR(Guid)[] = { WPP_GUID_STRUCT Guid }

WPP_LOCAL_MSG_GUID(WPP_USER_MSG_GUID);
#define WPP_LOCAL_TraceGuids WPP_LOCAL_MSG_VAR(WPP_USER_MSG_GUID)

#endif
#endif

#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#ifndef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR ,
#endif
#ifndef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET SIZE_T
#endif
#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((WPP_LOGPAIR_SIZET)(_Size))WPP_LOGPAIR_SEPARATOR
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_CHECK_INIT)
# define WPP_CHECK_INIT (WPP_CB != (WPP_CB_TYPE*)&WPP_CB) &&
#endif

#ifndef WPP_SF__def
#       define WPP_SF__def
WPP_INLINE void WPP_SF_(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id,  (void*)0); }
#endif  // #ifndef WPP_SF__def
#ifndef WPP_SF_D_def
#       define WPP_SF_D_def
WPP_INLINE void WPP_SF_D(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1)  (void*)0); }
#endif  // #ifndef WPP_SF_D_def
#ifndef WPP_SF_Dq_def
#       define WPP_SF_Dq_def
WPP_INLINE void WPP_SF_Dq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_Dq_def
#ifndef WPP_SF_S_def
#       define WPP_SF_S_def
WPP_INLINE void WPP_SF_S(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCWSTR _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGWSTR(_a1)  (void*)0); }
#endif  // #ifndef WPP_SF_S_def
#ifndef WPP_SF_SD_def
#       define WPP_SF_SD_def
WPP_INLINE void WPP_SF_SD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCWSTR _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_SD_def
#ifndef WPP_SF_SS_def
#       define WPP_SF_SS_def
WPP_INLINE void WPP_SF_SS(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCWSTR _a1, LPCWSTR _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGWSTR(_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_SS_def
#ifndef WPP_SF_SSD_def
#       define WPP_SF_SSD_def
WPP_INLINE void WPP_SF_SSD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCWSTR _a1, LPCWSTR _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGWSTR(_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  (void*)0); }
#endif  // #ifndef WPP_SF_SSD_def
#ifndef WPP_SF_SSq_def
#       define WPP_SF_SSq_def
WPP_INLINE void WPP_SF_SSq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCWSTR _a1, LPCWSTR _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGWSTR(_a2) WPP_LOGTYPEVAL(const void*,_a3)  (void*)0); }
#endif  // #ifndef WPP_SF_SSq_def
#ifndef WPP_SF_Sq_def
#       define WPP_SF_Sq_def
WPP_INLINE void WPP_SF_Sq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCWSTR _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGWSTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_Sq_def
#ifndef WPP_SF_q_def
#       define WPP_SF_q_def
WPP_INLINE void WPP_SF_q(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1)  (void*)0); }
#endif  // #ifndef WPP_SF_q_def
#ifndef WPP_SF_qD_def
#       define WPP_SF_qD_def
WPP_INLINE void WPP_SF_qD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_qD_def
#ifndef WPP_SF_qS_def
#       define WPP_SF_qS_def
WPP_INLINE void WPP_SF_qS(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, LPCWSTR _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGWSTR(_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_qS_def
#ifndef WPP_SF_qq_def
#       define WPP_SF_qq_def
WPP_INLINE void WPP_SF_qq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_qq_def
#ifndef WPP_SF_sq_def
#       define WPP_SF_sq_def
WPP_INLINE void WPP_SF_sq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_sq_def
#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif

#ifndef WPP_LOG_ALWAYS
#  define WPP_LOG_ALWAYS(...)
#endif

#ifdef WPP_DEBUG
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c109(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c109) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           13, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c112(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c112) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           14, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c118(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c118) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           15, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c123(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c123) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           16, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c126(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c126) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           17, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c129(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c129) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           18, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c142(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c142) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_qq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           19, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c154(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c154) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           20, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c177(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c177) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           21, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c181(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c181) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           22, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c198(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c198) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_S(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           23, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c206(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c206) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           24, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c214(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c214) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           25, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c218(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c218) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_S(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           26, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c233(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c233) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           27, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c248(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c248) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           28, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c251(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c251) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           29, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c273(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c273) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           30, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c276(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c276) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           31, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c284(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c284) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           32, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c287(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c287) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           33, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c321(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c321) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           34, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c324(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c324) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           35, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c339(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c339) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           36, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c348(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c348) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           37, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c356(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c356) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           38, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c37(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c37) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_q(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           10, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c381(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c381) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           39, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c394(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c394) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           40, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c397(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c397) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_q(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           41, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c407(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c407) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           42, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c411(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c411) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           43, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c421(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c421) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           44, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c425(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c425) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           45, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c436(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c436) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           46, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c439(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c439) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           47, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c449(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c449) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           48, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c452(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c452) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           49, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c456(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c456) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           50, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c459(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c459) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           51, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c476(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c476) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           52, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c481(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c481) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           53, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c500(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c500) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           54, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c505(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c505) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           55, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c509(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c509) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           56, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c551(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c551) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_S(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           57, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c563(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c563) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           58, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c60(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c60) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_Sq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           11, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c607(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c607) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           59, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c617(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c617) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           60, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c621(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c621) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           61, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c662(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c662) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           62, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c686(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c686) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_SS(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           63, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c691(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c691) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           64, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c698(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c698) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           65, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c710(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c710) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_SSD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           66, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c714(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c714) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_SS(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           67, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c791(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c791) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_q(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           68, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c810(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c810) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_q(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           69, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c819(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c819) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_q(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           70, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c823(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c823) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_qD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           71, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c831(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c831) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_Dq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           72, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c837(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c837) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_q(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           73, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c853(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c853) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_sq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           74, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c863(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c863) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_qD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           75, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c867(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c867) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_qS(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           76, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c890(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c890) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_qq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           77, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c901(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c901) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           78, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c912(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c912) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_qq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           79, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c92(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c92) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           12, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c924(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c924) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           80, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c935(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c935) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_qq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           81, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c950(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c950) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                           82, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c109(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c109) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            13, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c112(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c112) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            14, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c118(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c118) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            15, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c123(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c123) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            16, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c126(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c126) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            17, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c129(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c129) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            18, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c142(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c142) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_qq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            19, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c154(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c154) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            20, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c177(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c177) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            21, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c181(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c181) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            22, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c198(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c198) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_S(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            23, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c206(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c206) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            24, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c214(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c214) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            25, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c218(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c218) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_S(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            26, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c233(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c233) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            27, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c248(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c248) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            28, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c251(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c251) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            29, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c273(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c273) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            30, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c276(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c276) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            31, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c284(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c284) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            32, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c287(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c287) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            33, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c321(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c321) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            34, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c324(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c324) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            35, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c339(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c339) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            36, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c348(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c348) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            37, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c356(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c356) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            38, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c37(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c37) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_q(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            10, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c381(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c381) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            39, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c394(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c394) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            40, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c397(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c397) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_q(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            41, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c407(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c407) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            42, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c411(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c411) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            43, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c421(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c421) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            44, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c425(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c425) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            45, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c436(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c436) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            46, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c439(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c439) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            47, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c449(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c449) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            48, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c452(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c452) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            49, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c456(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c456) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            50, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c459(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c459) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            51, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c476(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c476) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            52, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c481(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c481) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            53, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c500(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c500) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            54, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c505(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c505) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            55, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c509(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c509) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            56, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c551(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c551) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_S(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            57, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c563(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c563) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            58, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c60(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c60) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_Sq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            11, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c607(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c607) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            59, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c617(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c617) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            60, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c621(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c621) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            61, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c662(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c662) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            62, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c686(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c686) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SS(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            63, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c691(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c691) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            64, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c698(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c698) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            65, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c710(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c710) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SSD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            66, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c714(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c714) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SS(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            67, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c791(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c791) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_q(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            68, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c810(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c810) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_q(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            69, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c819(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c819) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_q(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            70, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c823(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c823) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_qD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            71, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c831(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c831) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_Dq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            72, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c837(LEVEL, FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c837) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_q(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            73, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c853(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c853) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_sq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            74, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c863(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c863) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_qD(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            75, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c867(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c867) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_qS(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            76, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c890(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c890) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_qq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            77, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c901(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c901) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            78, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c912(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c912) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_qq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            79, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c92(LEVEL, FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c92) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_SSq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            12, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c924(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c924) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            80, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c935(LEVEL, FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c935) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_qq(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            81, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_LdapLib_c950(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(LdapLib_c950) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                            82, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif


#ifdef WPP_DEBUG
#else
#endif



#if defined(__cplusplus)
};
#endif

#endif

// a7b02d7c74b8696ca7a16aef4335069a Generated file. Do not edit.
// File created by WPP compiler version 10.0.16299-Fri Sep 29 02:03:49 2017
// from template provider.tpl

#pragma once

#ifdef WPP_ETW_PROVIDER

#include <wmistr.h>
#include <evntrace.h>
#include "evntprov.h"


#if !defined(ETW_INLINE)
#define ETW_INLINE DECLSPEC_NOINLINE __inline
#endif

#if defined(__cplusplus)
extern "C" {
#endif


#ifndef MCGEN_DISABLE_PROVIDER_CODE_GENERATION
#if  !defined(McGenDebug)
#define McGenDebug(a,b)
#endif 


#if !defined(MCGEN_TRACE_CONTEXT_DEF)
#define MCGEN_TRACE_CONTEXT_DEF
typedef struct _MCGEN_TRACE_CONTEXT
{
    TRACEHANDLE     RegistrationHandle;
    TRACEHANDLE     Logger;
    ULONGLONG       MatchAnyKeyword;
    ULONGLONG       MatchAllKeyword;
    ULONG           Flags;
    ULONG           IsEnabled;
    UCHAR           Level; 
    UCHAR           Reserve;
} MCGEN_TRACE_CONTEXT, *PMCGEN_TRACE_CONTEXT;
#endif

#if !defined(MCGEN_EVENT_ENABLED_DEF)
#define MCGEN_EVENT_ENABLED_DEF
FORCEINLINE
BOOLEAN
McGenEventEnabled(
    __in PMCGEN_TRACE_CONTEXT EnableInfo,
    __in PCEVENT_DESCRIPTOR EventDescriptor
    )
{
    //
    // Check if the event Level is lower than the level at which
    // the channel is enabled.
    // If the event Level is 0 or the channel is enabled at level 0,
    // all levels are enabled.
    //

    if ((EventDescriptor->Level <= EnableInfo->Level) || // This also covers the case of Level == 0.
        (EnableInfo->Level == 0)) {

        //
        // Check if Keyword is enabled
        //

        if ((EventDescriptor->Keyword == (ULONGLONG)0) ||
            ((EventDescriptor->Keyword & EnableInfo->MatchAnyKeyword) &&
             ((EventDescriptor->Keyword & EnableInfo->MatchAllKeyword) == EnableInfo->MatchAllKeyword))) {

            return TRUE;
        }
    }
    return FALSE;
}
#endif


//
// EnableCheckMacro
//
#ifndef MCGEN_ENABLE_CHECK
#define MCGEN_ENABLE_CHECK(Context, Descriptor) (Context.IsEnabled &&  McGenEventEnabled(&Context, &Descriptor))
#endif

#if !defined(MCGEN_CONTROL_CALLBACK)
#define MCGEN_CONTROL_CALLBACK

DECLSPEC_NOINLINE __inline
VOID
__stdcall
McGenControlCallbackV2(
    __in LPCGUID SourceId,
    __in ULONG ControlCode,
    __in UCHAR Level,
    __in ULONGLONG MatchAnyKeyword,
    __in ULONGLONG MatchAllKeyword,
    __in_opt PEVENT_FILTER_DESCRIPTOR FilterData,
    __inout_opt PVOID CallbackContext
    )
/*++

Routine Description:

    This is the notification callback for Vista.

Arguments:

    SourceId - The GUID that identifies the session that enabled the provider. 

    ControlCode - The parameter indicates whether the provider 
                  is being enabled or disabled.

    Level - The level at which the event is enabled.

    MatchAnyKeyword - The bitmask of keywords that the provider uses to 
                      determine the category of events that it writes.

    MatchAllKeyword - This bitmask additionally restricts the category 
                      of events that the provider writes. 

    FilterData - The provider-defined data.

    CallbackContext - The context of the callback that is defined when the provider 
                      called EtwRegister to register itself.

Remarks:

    ETW calls this function to notify provider of enable/disable

--*/
{
    PMCGEN_TRACE_CONTEXT Ctx = (PMCGEN_TRACE_CONTEXT)CallbackContext;
#ifndef MCGEN_PRIVATE_ENABLE_CALLBACK_V2
    UNREFERENCED_PARAMETER(SourceId);
    UNREFERENCED_PARAMETER(FilterData);
#endif

    if (Ctx == NULL) {
        return;
    }

    switch (ControlCode) {

        case EVENT_CONTROL_CODE_ENABLE_PROVIDER:
            Ctx->Level = Level;
            Ctx->MatchAnyKeyword = MatchAnyKeyword;
            Ctx->MatchAllKeyword = MatchAllKeyword;
            Ctx->IsEnabled = EVENT_CONTROL_CODE_ENABLE_PROVIDER;
            break;

        case EVENT_CONTROL_CODE_DISABLE_PROVIDER:
            Ctx->IsEnabled = EVENT_CONTROL_CODE_DISABLE_PROVIDER;
            Ctx->Level = 0;
            Ctx->MatchAnyKeyword = 0;
            Ctx->MatchAllKeyword = 0;
            break;
 
        default:
            break;
    }

#ifdef MCGEN_PRIVATE_ENABLE_CALLBACK_V2
    //
    // Call user defined callback
    //
    MCGEN_PRIVATE_ENABLE_CALLBACK_V2(
        SourceId,
        ControlCode,
        Level,
        MatchAnyKeyword,
        MatchAllKeyword,
        FilterData,
        CallbackContext
        );
#endif
   
    return;
}

#endif
#endif // MCGEN_DISABLE_PROVIDER_CODE_GENERATION


EXTERN_C __declspec(selectany) const GUID ;// = {0x00000000, 0x0000, 0x0000, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

#define _CHANNEL_C1 0x9

#ifndef MCGEN_DISABLE_PROVIDER_CODE_GENERATION


#define Handle (_Context.RegistrationHandle)

EXTERN_C __declspec(selectany) MCGEN_TRACE_CONTEXT _Context;// = {0};

#if !defined(McGenEventRegisterUnregister)
#define McGenEventRegisterUnregister
DECLSPEC_NOINLINE __inline
ULONG __stdcall
McGenEventRegister(
    __in LPCGUID ProviderId,
    __in_opt PENABLECALLBACK EnableCallback,
    __in_opt PVOID CallbackContext,
    __inout PREGHANDLE RegHandle
    )
/*++

Routine Description:

    This function register the provider with ETW USER mode.

Arguments:
    ProviderId - Provider Id to be register with ETW.

    EnableCallback - Callback to be used.

    CallbackContext - Context for this provider.

    RegHandle - Pointer to Registration handle.

Remarks:

    If the handle != NULL will return ERROR_SUCCESS

--*/
{
    ULONG Error;


    if (*RegHandle) {
        //
        // already registered
        //
        return ERROR_SUCCESS;
    }

    Error = EventRegister( ProviderId, EnableCallback, CallbackContext, RegHandle); 

    return Error;
}


DECLSPEC_NOINLINE __inline
ULONG __stdcall
McGenEventUnregister(__inout PREGHANDLE RegHandle)
/*++

Routine Description:

    Unregister from ETW USER mode

Arguments:
            RegHandle this is the pointer to the provider context
Remarks:
            If Provider has not register RegHandle = NULL,
            return ERROR_SUCCESS
--*/
{
    ULONG Error;


    if(!(*RegHandle)) {
        //
        // Provider has not registerd
        //
        return ERROR_SUCCESS;
    }

    Error = EventUnregister(*RegHandle); 
    *RegHandle = (REGHANDLE)0;
    
    return Error;
}
#endif

#ifdef WPP_LOGPAIR_SEPARATOR
# undef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR
#endif

#ifdef WPP_LOGPAIR_SIZET
# undef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET ULONG
#endif

#ifndef EventRegister
#define EventRegister() McGenEventRegister(&, McGenControlCallbackV2, &_Context, &Handle) 
#endif

#ifndef EventUnregister
#define EventUnregister() McGenEventUnregister(&Handle) 
#endif

#define ETW_START EventRegister
#define ETW_STOP EventUnregister

#endif // MCGEN_DISABLE_PROVIDER_CODE_GENERATION


#ifndef MCGEN_DISABLE_PROVIDER_CODE_GENERATION

#ifndef ETW_LOGPAIR
#define ETW_LOGPAIR(_Size, _Addr) WPP_LOGPAIR(_Size, _Addr)
#endif

#define ETW_LOGTYPEVAL(_Type, _Value) ETW_LOGPAIR(sizeof(_Type), &(_Value))
#define ETW_LOGTYPEPTR(_Value) ETW_LOGPAIR(sizeof(*(_Value)), (_Value))

#endif

#define ETW_THIS_FILE LdapLib_c

#define ETW_EVAL(_value_) _value_
#define Event(Id) ETW_EVAL(Event) ## ETW_EVAL(Id) ## ETW_EVAL(_) ## ETW_EVAL(ETW_THIS_FILE) ## ETW_EVAL(__LINE__)

#if defined(__cplusplus)
};
#endif

#define MSG_event_10                         0x0000000AL
#define MSG_providermessage                  0x90000001L

#endif


//
// Tracing Macro name redefinition
//

// NoMsgArgs

#undef DoDebugTrace
#define DoDebugTrace WPP_(CALL)
#undef DoTraceMessage
#define DoTraceMessage WPP_(CALL)
#undef LdapWppMessage
#define LdapWppMessage WPP_(CALL)
// MsgArgs

// NoMsgArgs and Etw
